/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface ISyndicateClosedEndFundManagerLogicV0Contract
  extends Truffle.Contract<ISyndicateClosedEndFundManagerLogicV0Instance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<ISyndicateClosedEndFundManagerLogicV0Instance>;
}

type AllEvents = never;

export interface ISyndicateClosedEndFundManagerLogicV0Instance
  extends Truffle.ContractInstance {
  createSyndicate: {
    (
      managerManagementFeeBasisPoints: number | BN | string,
      managerDistributionShareBasisPoints: number | BN | string,
      syndicateDistributionShareBasisPoints: number | BN | string,
      numMembersMax: number | BN | string,
      depositERC20Address: string,
      depositMemberMin: number | BN | string,
      depositMemberMax: number | BN | string,
      depositTotalMax: number | BN | string,
      dateClose: number | BN | string,
      modifiable: boolean,
      allowlistEnabled: boolean,
      transferable: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      managerManagementFeeBasisPoints: number | BN | string,
      managerDistributionShareBasisPoints: number | BN | string,
      syndicateDistributionShareBasisPoints: number | BN | string,
      numMembersMax: number | BN | string,
      depositERC20Address: string,
      depositMemberMin: number | BN | string,
      depositMemberMax: number | BN | string,
      depositTotalMax: number | BN | string,
      dateClose: number | BN | string,
      modifiable: boolean,
      allowlistEnabled: boolean,
      transferable: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      managerManagementFeeBasisPoints: number | BN | string,
      managerDistributionShareBasisPoints: number | BN | string,
      syndicateDistributionShareBasisPoints: number | BN | string,
      numMembersMax: number | BN | string,
      depositERC20Address: string,
      depositMemberMin: number | BN | string,
      depositMemberMax: number | BN | string,
      depositTotalMax: number | BN | string,
      dateClose: number | BN | string,
      modifiable: boolean,
      allowlistEnabled: boolean,
      transferable: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      managerManagementFeeBasisPoints: number | BN | string,
      managerDistributionShareBasisPoints: number | BN | string,
      syndicateDistributionShareBasisPoints: number | BN | string,
      numMembersMax: number | BN | string,
      depositERC20Address: string,
      depositMemberMin: number | BN | string,
      depositMemberMax: number | BN | string,
      depositTotalMax: number | BN | string,
      dateClose: number | BN | string,
      modifiable: boolean,
      allowlistEnabled: boolean,
      transferable: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  managerSetManagerPending: {
    (
      syndicateAddress: string,
      managerPendingAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      syndicateAddress: string,
      managerPendingAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      syndicateAddress: string,
      managerPendingAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      syndicateAddress: string,
      managerPendingAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  managerPendingConfirmAndSetManagerFeeAddress: {
    (
      syndicateAddress: string,
      managerFeeAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      syndicateAddress: string,
      managerFeeAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      syndicateAddress: string,
      managerFeeAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      syndicateAddress: string,
      managerFeeAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  managerPendingConfirm: {
    (syndicateAddress: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      syndicateAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      syndicateAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      syndicateAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  managerSetManagerFeeAddress: {
    (
      syndicateAddress: string,
      managerFeeAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      syndicateAddress: string,
      managerFeeAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      syndicateAddress: string,
      managerFeeAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      syndicateAddress: string,
      managerFeeAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  managerSetManagerFees: {
    (
      syndicateAddress: string,
      managerManagementFeeBasisPoints: number | BN | string,
      managerDistributionShareBasisPoints: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      syndicateAddress: string,
      managerManagementFeeBasisPoints: number | BN | string,
      managerDistributionShareBasisPoints: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      syndicateAddress: string,
      managerManagementFeeBasisPoints: number | BN | string,
      managerDistributionShareBasisPoints: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      syndicateAddress: string,
      managerManagementFeeBasisPoints: number | BN | string,
      managerDistributionShareBasisPoints: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  managerSetSyndicateDistributionShare: {
    (
      syndicateAddress: string,
      syndicateDistributionShareBasisPoints: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      syndicateAddress: string,
      syndicateDistributionShareBasisPoints: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      syndicateAddress: string,
      syndicateDistributionShareBasisPoints: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      syndicateAddress: string,
      syndicateDistributionShareBasisPoints: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  managerAssessManagementFee: {
    (
      syndicateAddress: string,
      feeERC20Address: string,
      amount: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      syndicateAddress: string,
      feeERC20Address: string,
      amount: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      syndicateAddress: string,
      feeERC20Address: string,
      amount: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      syndicateAddress: string,
      feeERC20Address: string,
      amount: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  managerSetNumMembersMax: {
    (
      syndicateAddress: string,
      numMembersMax: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      syndicateAddress: string,
      numMembersMax: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      syndicateAddress: string,
      numMembersMax: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      syndicateAddress: string,
      numMembersMax: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  managerSetNumMembersMaxToCurrent: {
    (syndicateAddress: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      syndicateAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      syndicateAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      syndicateAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  managerSetDateClose: {
    (
      syndicateAddress: string,
      dateClose: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      syndicateAddress: string,
      dateClose: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      syndicateAddress: string,
      dateClose: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      syndicateAddress: string,
      dateClose: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  managerCloseSyndicate: {
    (syndicateAddress: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      syndicateAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      syndicateAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      syndicateAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  managerSetMetadata: {
    (
      syndicateAddress: string,
      metadataKeys: string[],
      metadataValues: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      syndicateAddress: string,
      metadataKeys: string[],
      metadataValues: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      syndicateAddress: string,
      metadataKeys: string[],
      metadataValues: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      syndicateAddress: string,
      metadataKeys: string[],
      metadataValues: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  managerEmitMemo: {
    (
      syndicateAddress: string,
      hexadecimalHash: string,
      hashFunction: number | BN | string,
      hashSize: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      syndicateAddress: string,
      hexadecimalHash: string,
      hashFunction: number | BN | string,
      hashSize: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      syndicateAddress: string,
      hexadecimalHash: string,
      hashFunction: number | BN | string,
      hashSize: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      syndicateAddress: string,
      hexadecimalHash: string,
      hashFunction: number | BN | string,
      hashSize: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  methods: {
    createSyndicate: {
      (
        managerManagementFeeBasisPoints: number | BN | string,
        managerDistributionShareBasisPoints: number | BN | string,
        syndicateDistributionShareBasisPoints: number | BN | string,
        numMembersMax: number | BN | string,
        depositERC20Address: string,
        depositMemberMin: number | BN | string,
        depositMemberMax: number | BN | string,
        depositTotalMax: number | BN | string,
        dateClose: number | BN | string,
        modifiable: boolean,
        allowlistEnabled: boolean,
        transferable: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        managerManagementFeeBasisPoints: number | BN | string,
        managerDistributionShareBasisPoints: number | BN | string,
        syndicateDistributionShareBasisPoints: number | BN | string,
        numMembersMax: number | BN | string,
        depositERC20Address: string,
        depositMemberMin: number | BN | string,
        depositMemberMax: number | BN | string,
        depositTotalMax: number | BN | string,
        dateClose: number | BN | string,
        modifiable: boolean,
        allowlistEnabled: boolean,
        transferable: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        managerManagementFeeBasisPoints: number | BN | string,
        managerDistributionShareBasisPoints: number | BN | string,
        syndicateDistributionShareBasisPoints: number | BN | string,
        numMembersMax: number | BN | string,
        depositERC20Address: string,
        depositMemberMin: number | BN | string,
        depositMemberMax: number | BN | string,
        depositTotalMax: number | BN | string,
        dateClose: number | BN | string,
        modifiable: boolean,
        allowlistEnabled: boolean,
        transferable: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        managerManagementFeeBasisPoints: number | BN | string,
        managerDistributionShareBasisPoints: number | BN | string,
        syndicateDistributionShareBasisPoints: number | BN | string,
        numMembersMax: number | BN | string,
        depositERC20Address: string,
        depositMemberMin: number | BN | string,
        depositMemberMax: number | BN | string,
        depositTotalMax: number | BN | string,
        dateClose: number | BN | string,
        modifiable: boolean,
        allowlistEnabled: boolean,
        transferable: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    managerSetManagerPending: {
      (
        syndicateAddress: string,
        managerPendingAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        syndicateAddress: string,
        managerPendingAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        syndicateAddress: string,
        managerPendingAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        syndicateAddress: string,
        managerPendingAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    managerPendingConfirmAndSetManagerFeeAddress: {
      (
        syndicateAddress: string,
        managerFeeAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        syndicateAddress: string,
        managerFeeAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        syndicateAddress: string,
        managerFeeAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        syndicateAddress: string,
        managerFeeAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    managerPendingConfirm: {
      (
        syndicateAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        syndicateAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        syndicateAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        syndicateAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    managerSetManagerFeeAddress: {
      (
        syndicateAddress: string,
        managerFeeAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        syndicateAddress: string,
        managerFeeAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        syndicateAddress: string,
        managerFeeAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        syndicateAddress: string,
        managerFeeAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    managerSetManagerFees: {
      (
        syndicateAddress: string,
        managerManagementFeeBasisPoints: number | BN | string,
        managerDistributionShareBasisPoints: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        syndicateAddress: string,
        managerManagementFeeBasisPoints: number | BN | string,
        managerDistributionShareBasisPoints: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        syndicateAddress: string,
        managerManagementFeeBasisPoints: number | BN | string,
        managerDistributionShareBasisPoints: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        syndicateAddress: string,
        managerManagementFeeBasisPoints: number | BN | string,
        managerDistributionShareBasisPoints: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    managerSetSyndicateDistributionShare: {
      (
        syndicateAddress: string,
        syndicateDistributionShareBasisPoints: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        syndicateAddress: string,
        syndicateDistributionShareBasisPoints: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        syndicateAddress: string,
        syndicateDistributionShareBasisPoints: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        syndicateAddress: string,
        syndicateDistributionShareBasisPoints: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    managerAssessManagementFee: {
      (
        syndicateAddress: string,
        feeERC20Address: string,
        amount: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        syndicateAddress: string,
        feeERC20Address: string,
        amount: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        syndicateAddress: string,
        feeERC20Address: string,
        amount: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        syndicateAddress: string,
        feeERC20Address: string,
        amount: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    managerSetNumMembersMax: {
      (
        syndicateAddress: string,
        numMembersMax: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        syndicateAddress: string,
        numMembersMax: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        syndicateAddress: string,
        numMembersMax: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        syndicateAddress: string,
        numMembersMax: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    managerSetNumMembersMaxToCurrent: {
      (
        syndicateAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        syndicateAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        syndicateAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        syndicateAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    managerSetDateClose: {
      (
        syndicateAddress: string,
        dateClose: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        syndicateAddress: string,
        dateClose: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        syndicateAddress: string,
        dateClose: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        syndicateAddress: string,
        dateClose: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    managerCloseSyndicate: {
      (
        syndicateAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        syndicateAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        syndicateAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        syndicateAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    managerSetMetadata: {
      (
        syndicateAddress: string,
        metadataKeys: string[],
        metadataValues: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        syndicateAddress: string,
        metadataKeys: string[],
        metadataValues: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        syndicateAddress: string,
        metadataKeys: string[],
        metadataValues: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        syndicateAddress: string,
        metadataKeys: string[],
        metadataValues: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    managerEmitMemo: {
      (
        syndicateAddress: string,
        hexadecimalHash: string,
        hashFunction: number | BN | string,
        hashSize: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        syndicateAddress: string,
        hexadecimalHash: string,
        hashFunction: number | BN | string,
        hashSize: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        syndicateAddress: string,
        hexadecimalHash: string,
        hashFunction: number | BN | string,
        hashSize: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        syndicateAddress: string,
        hexadecimalHash: string,
        hashFunction: number | BN | string,
        hashSize: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}

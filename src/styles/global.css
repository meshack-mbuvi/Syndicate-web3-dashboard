@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html,
  @font-face {
    font-family: ABC Whyte Inktrap Variable;
    src: url(/fonts/ABC_Whyte_Inktrap_Variable/ABCWhyteInktrapVariable-Trial.woff)
      format("woff");
  }

  @font-face {
    font-family: ABC Whyte Variable;
    src: url(/fonts/ABC_Whyte_Variable/ABCWhyteVariable-Trial.woff)
      format("woff");
  }

  @font-face {
    font-family: ABC Whyte Medium;
    src: url(/fonts/Whyte/ABCWhyte-Medium.woff) format("woff");
  }

  @font-face {
    font-family: ABC Whyte Regular;
    src: url(/fonts/Whyte/ABCWhyte-Regular.woff) format("woff");
  }

  @font-face {
    font-family: ABC Whyte Light;
    src: url(/fonts/Whyte/ABCWhyte-Light-Trial.woff) format("woff");
  }

  @font-face {
    font-family: ABC Whyte Inktrap Medium;
    src: url(/fonts/Whyte\ Inktrap/ABCWhyteInktrap-Medium.woff) format("woff");
  }

  @font-face {
    font-family: ABC Whyte Inktrap Regular;
    src: url(/fonts/Whyte\ Inktrap/ABCWhyteInktrap-Regular.woff) format("woff");
  }

  @font-face {
    font-family: ABC Whyte Inktrap Extralight;
    src: url(/fonts/ABC_Whyte_Inktrap/ABCWhyteInktrap-Extralight-Trial.woff)
      format("woff");
  }

  @font-face {
    font-family: ABC Whyte Inktrap Light;
    src: url(/fonts/ABC_Whyte_Inktrap/ABCWhyteInktrap-Light-Trial.woff)
      format("woff");
  }

  body {
    background-color: #000000;
    font-family: "ABC Whyte Regular", "Helvetica", "Arial", "sans-serif";
    color: white;
    font-style: normal;
  }

  h1 {
    font-family: "ABC Whyte Inktrap Regular";
  }

  h2 {
    font-family: "ABC Whyte Regular";
  }

  h3 {
    font-family: "ABC Whyte Medium";
  }

  h4 {
    font-family: "ABC Whyte Medium";
  }

  .font-normal {
    font-family: "ABC Whyte Regular";
  }

  .font-medium {
    font-family: "ABC Whyte Medium";
  }
}

@layer utilities {
  @variants responsive {
    /* Sizes */

    .w-120 {
      width: 30rem;
    }

    .w-96 {
      width: 24rem;
    }

    .max-w-120 {
      max-width: 30rem;
    }

    .perfect-square::after {
      content: "";
      display: block;
      padding-bottom: 100%;
    }

    /*
      Force content to the left edge of the screen when it's inside a
      narrow child element, like the .container class
    */
    .force-to-left {
        margin-left: calc((-100vw + 100%) / 2);
    }

    /*
      Force content to the left edge of the screen when it's inside a
      narrow child element, like the .container classs
    */
    .force-to-right {
        margin-right: calc((-100vw + 100%) / 2);
    }

    /*
      Use this when using .edge-to-edge on an horizontally scrollable
      container, but you want the content to begin at the 'initial' left
      position.
    */
    .inset-left {
        padding-left: calc((100vw - 100%) / 2);
    }

    /*
    Edge to edge
      Use this when you want to make content, inside a narrow container,
      the width of the screen i.e edge-to-edge. Only use this when it's too
      complicated to change the page structure to get this behavior.
    */
    .edge-to-edge {
        @apply force-to-left w-screen;
    }

    /*
      Like .edge-to-edge but has a left inset for inner content.
    */
    .edge-to-edge-with-left-inset {
        @apply edge-to-edge inset-left;
    }

    /* Positioning */

    .vertically-center {
      position: relative;
      top: 50%;
      transform: translateY(-50%);
    }

    .center {
      @apply mx-auto vertically-center;
    }

    /* Touch targets */

    .target-l-12 {
      @apply pl-12 -ml-12;
    }

    .target-l-6 {
      @apply pl-6 -ml-6;
    }

    .target-l-3 {
      @apply pl-3 -ml-3;
    }

    .target-r-3 {
      @apply pr-3 -mr-3;
    }

    .visibility-container:hover .visibility-hover {
      visibility: visible;
    }

    /* Scroll bar */

    .no-scroll-bar::-webkit-scrollbar { 
      display: none;
    }
  
    .no-scroll-bar {
        -ms-overflow-style: none;  /* IE 10+ */
        scrollbar-width: none;  /* Firefox */   
    }
  }
}

.active {
  color: #4376FF;
}
.main {
  height: 100vh;
}

/* custom styles for all inputs */
input {
  font-family: Whyte;
  font-style: normal;
  font-weight: normal;
  font-size: 14px;
  line-height: 18px;
  display: flex;
  align-items: center;
  color: #000000;
}

/* custom border radii */
.rounded-custom {
  border-radius: 0.625rem;
}

.rounded-t-custom {
  border-top-right-radius: 0.625rem;
  border-top-left-radius: 0.625rem;
}

.rounded-b-custom {
  border-bottom-right-radius: 0.625rem;
  border-bottom-left-radius: 0.625rem;
}

/* react-datepicker wrapper */
.react-datepicker-wrapper {
  display: flex;
  flex-grow: 1;
}

.rotate-180 {
  transform: rotate(180deg);
}

/* styles for linear gradients in dicover page */
.lilMiquela {
  background: linear-gradient(180deg, #1200e3 0%, #cc00ff 100%);
}
.cryptoart {
  background: linear-gradient(180deg, #e30e00 0%, #ffc700 100%);
}

.cryptomemes {
  background: linear-gradient(180deg, #3be300 0%, #00c2ff 100%);
}

.see-more {
  border: 1px solid #6c6c6c;
}

.social-tokens {
  background: linear-gradient(180deg, #e30096 0%, #bd00ff 100%);
}

.women-founders {
  background: linear-gradient(180deg, #009fe3 0%, #fff500 100%);
}

.black-founders {
  background: linear-gradient(180deg, #e37b00 0%, #0047ff 100%);
}

.yield-farming {
  background: linear-gradient(180deg, #e30000 0%, #00a3ff 100%);
}

.wealth-protection {
  background: linear-gradient(180deg, #c4e300 0%, #7000ff 100%);
}

.zora {
  background: linear-gradient(180deg, #00e392 0%, #bd00ff 100%);
}

.the-graph {
  background: linear-gradient(180deg, #004de3 0%, #00fff0 100%);
}

.tera {
  background: linear-gradient(180deg, #e30052 0%, #00ff66 100%);
}

.ideo-liquidity {
  background: linear-gradient(180deg, #e36d00 0%, #faff00 100%);
}
/* end of linear-gradient styles  */

.lawn-green {
  background: linear-gradient(180deg, #00ffc2 0%, #73ff04 100%);
}

.pinky-blue {
  background: linear-gradient(180deg, #00a3ff 0%, #ff007a 100%);
}

.yellowish-light-blue {
  background: linear-gradient(180deg, #00c2ff 0%, #ff8a00 100%);
}

.violet-red {
  background: linear-gradient(180deg, #ff0000 0%, #5200ff 100%);
}

.violet-yellow {
  background: linear-gradient(180deg, #faff00 0%, #dd0eff 99.99%, #ff8a00 100%);
}
.tst {
  background: linear-gradient(180deg, #fa00ff 0%, #73ff04 100%);
}

/* circula loader */

.loader {
  border-top-color: #3498db;
  -webkit-animation: spinner 1.5s linear infinite;
  animation: spinner 1.5s linear infinite;
  width: 35px !important;
  height: 35px !important;
}

@-webkit-keyframes spinner {
  0% {
    -webkit-transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
  }
}

@keyframes spinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.tooltip {
  position: relative;
  display: inline-block;
}

.tooltip .tooltiptext {
  visibility: hidden;
  color: #fff;
  text-align: left;
  border-radius: 6px;
  position: absolute;
  z-index: 1;
  top: calc(130% + 4px);
  margin-left: -260px;
  opacity: 0;
  transition: opacity 0.3s;
  width: 300px;
  box-shadow: 0px 14px 14px 0px #00000073;
}

.tooltip .tooltiptext.left {
  margin-left: -20px;
}

.tooltip .tooltiptext::after {
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-width: 10px;
  border-style: solid;
  top: -18px;
  left: 260px;
  border-color: transparent transparent rgb(23, 23, 23) transparent;
}

.tooltip .tooltiptext.left::after {
  left: 20px;
}

.tooltip:hover .tooltiptext {
  visibility: visible;
  opacity: 1;
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type="number"] {
  -moz-appearance: textfield;
}

/* 
* Custom spinner
*/
@keyframes circle--animation {
  0%,
  25% {
    stroke-dashoffset: 280;
    transform: rotate(0);
  }

  50%,
  75% {
    stroke-dashoffset: 75;
    transform: rotate(45deg);
  }

  100% {
    stroke-dashoffset: 280;
    transform: rotate(360deg);
  }
}

@keyframes svg--animation {
  0% {
    transform: rotateZ(0deg);
  }
  100% {
    transform: rotateZ(360deg);
  }
}

svg.spinner {
  animation: 2s linear infinite svg--animation;
}

circle {
  fill: transparent;
  stroke-dasharray: 283;
  stroke-linecap: round;
  transform-origin: 50% 50%;
  stroke-dashoffset: 280;
  animation: 1.4s ease-in-out infinite both circle--animation;
}

/* end of custom spinner */

/* disallow context menu on images */
img {
  pointer-events: none;
}

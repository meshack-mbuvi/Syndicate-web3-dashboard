{
  "contractName": "SyndicateOwnerLogic",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ownerRenouncedPause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractFeeAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "ownerSetterSyndicateFeeAddress",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASIS_POINTS_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeAddress",
          "type": "address"
        }
      ],
      "name": "ownerSetSyndicateFeeAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerRenouncePause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerPauseContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerUnpauseContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "ownerTransferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerRenounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ownerRenouncedPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractFeeAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ownerSetterSyndicateFeeAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerPauseContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerRenounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerRenouncePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeAddress\",\"type\":\"address\"}],\"name\":\"ownerSetSyndicateFeeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownerTransferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerUnpauseContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Syndicate Inc.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerSetSyndicateFeeAddress(address)\":{\"params\":{\"feeAddress\":\"The owner's new contract fee address\"}},\"ownerTransferOwnership(address)\":{\"params\":{\"newOwner\":\"The new owner's address.\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ownerRenouncedPause(address)\":{\"notice\":\"Emit an event when the owner renounces ability to pause the contract\"},\"ownerSetterSyndicateFeeAddress(address,uint256)\":{\"notice\":\"Emit an event when the owner of the contract sets a new contract fee address\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Used to initialize the SyndicateOwnershipLogic contract.\"},\"ownerPauseContract()\":{\"notice\":\"Emergency pause function that can only be triggered by the contract ownerIts purpose is to pause functions with the whenNotPaused() modifier.  All other functions will work when paused\"},\"ownerRenounceOwnership()\":{\"notice\":\"Renounce ownership of the contractIf necessary, unpauses the contract before ownership is renounced to ensure that functions with the whenNotPaused() modifier are not locked\"},\"ownerRenouncePause()\":{\"notice\":\"Used by the owner to renounce ability to pause the contractIf necessary, unpauses the contract before ownership is renounced to ensure that functions with the whenNotPaused() modifier are not locked\"},\"ownerSetSyndicateFeeAddress(address)\":{\"notice\":\"set a new fee address for the contract function that can only be triggered by the contract owner.\"},\"ownerTransferOwnership(address)\":{\"notice\":\"Transfers ownership to the provided address.\"},\"ownerUnpauseContract()\":{\"notice\":\"Emergency unpause function that can only be triggered by the contract ownerIts purpose is to unpause functions with the whenNotPaused() modifier.  All other functions will work when paused\"}},\"notice\":\"Core module for owner functionality\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/will/Syndicate/contracts/SyndicateOwnerLogic.sol\":\"SyndicateOwnerLogic\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/will/Syndicate/contracts/SyndicateOwnerLogic.sol\":{\"keccak256\":\"0x745bc9671d4920a6ac4fa8b8777d6dc74e858d2dc93f1d9ce6f6ef93c5fc2df6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5826f4a71038b82d359817ce87ef93aa4cd5f0b59141184f83517d7991036182\",\"dweb:/ipfs/QmV5gH3XuGuRZbPWwzLj7n5MNjnaeKEqSAp3WGua7z3kq6\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b651c0571e3ecc124b3af7a598357a19406969b21b8a3fa06eeaf5e5c9150d6c\",\"dweb:/ipfs/QmPfcAhbGVfsSd7VKet77fuST397b7XSFU2myXxLdok79v\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x6080604052600180546001600160a81b0319167340db79f7f18c468c6552538b488c58b5e72bf4d917905534801561003657600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506000805460ff60a01b191690556106c6806100946000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b146100f2578063a09cca931461010d578063bfd9a7e114610120578063cfa498a314610133578063dac128ad1461014a578063f2fde38b1461015257600080fd5b806312285d40146100ae5780635c975abb146100b8578063715018a6146100da57806379f90d6c146100e257806381abf408146100ea575b600080fd5b6100b6610165565b005b600054600160a01b900460ff1660405190151581526020015b60405180910390f35b6100b66101a2565b6100b6610216565b6100b6610294565b6000546040516001600160a01b0390911681526020016100d1565b6100b661011b36600461062b565b6102e0565b6100b661012e36600461062b565b610316565b61013c61271081565b6040519081526020016100d1565b6100b6610394565b6100b661016036600461062b565b610421565b6000546001600160a01b031633146101985760405162461bcd60e51b815260040161018f9061065b565b60405180910390fd5b6101a061050b565b565b6000546001600160a01b031633146101cc5760405162461bcd60e51b815260040161018f9061065b565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102405760405162461bcd60e51b815260040161018f9061065b565b600154600160a01b900460ff161561028c5760405162461bcd60e51b815260206004820152600f60248201526e14105554d157d4915393d55390d151608a1b604482015260640161018f565b6101a06105a3565b6000546001600160a01b031633146102be5760405162461bcd60e51b815260040161018f9061065b565b600054600160a01b900460ff16156102d8576102d8610165565b6101a06101a2565b6000546001600160a01b0316331461030a5760405162461bcd60e51b815260040161018f9061065b565b61031381610421565b50565b6000546001600160a01b031633146103405760405162461bcd60e51b815260040161018f9061065b565b600180546001600160a01b0319166001600160a01b0383169081179091556040514281527f1a49e1bcd954390033d0a77f7090e458f8d292a5dca5ff1424c84446d37690f99060200160405180910390a250565b6000546001600160a01b031633146103be5760405162461bcd60e51b815260040161018f9061065b565b600054600160a01b900460ff16156103d8576103d8610165565b6001805460ff60a01b1916600160a01b1790556040513381527f8d464c3056e69b8da97814dbfddc04a614af8e35b3f030ba6ac9fbc881f2a35b906020015b60405180910390a1565b6000546001600160a01b0316331461044b5760405162461bcd60e51b815260040161018f9061065b565b6001600160a01b0381166104b05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161018f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600054600160a01b900460ff1661055b5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161018f565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b039091168152602001610417565b600054600160a01b900460ff16156105f05760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161018f565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861058b3390565b60006020828403121561063d57600080fd5b81356001600160a01b038116811461065457600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220fe588d9e2e063264e110d5655785686617cfce98203a43b27de15427645ebb7c64736f6c63430008050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b146100f2578063a09cca931461010d578063bfd9a7e114610120578063cfa498a314610133578063dac128ad1461014a578063f2fde38b1461015257600080fd5b806312285d40146100ae5780635c975abb146100b8578063715018a6146100da57806379f90d6c146100e257806381abf408146100ea575b600080fd5b6100b6610165565b005b600054600160a01b900460ff1660405190151581526020015b60405180910390f35b6100b66101a2565b6100b6610216565b6100b6610294565b6000546040516001600160a01b0390911681526020016100d1565b6100b661011b36600461062b565b6102e0565b6100b661012e36600461062b565b610316565b61013c61271081565b6040519081526020016100d1565b6100b6610394565b6100b661016036600461062b565b610421565b6000546001600160a01b031633146101985760405162461bcd60e51b815260040161018f9061065b565b60405180910390fd5b6101a061050b565b565b6000546001600160a01b031633146101cc5760405162461bcd60e51b815260040161018f9061065b565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102405760405162461bcd60e51b815260040161018f9061065b565b600154600160a01b900460ff161561028c5760405162461bcd60e51b815260206004820152600f60248201526e14105554d157d4915393d55390d151608a1b604482015260640161018f565b6101a06105a3565b6000546001600160a01b031633146102be5760405162461bcd60e51b815260040161018f9061065b565b600054600160a01b900460ff16156102d8576102d8610165565b6101a06101a2565b6000546001600160a01b0316331461030a5760405162461bcd60e51b815260040161018f9061065b565b61031381610421565b50565b6000546001600160a01b031633146103405760405162461bcd60e51b815260040161018f9061065b565b600180546001600160a01b0319166001600160a01b0383169081179091556040514281527f1a49e1bcd954390033d0a77f7090e458f8d292a5dca5ff1424c84446d37690f99060200160405180910390a250565b6000546001600160a01b031633146103be5760405162461bcd60e51b815260040161018f9061065b565b600054600160a01b900460ff16156103d8576103d8610165565b6001805460ff60a01b1916600160a01b1790556040513381527f8d464c3056e69b8da97814dbfddc04a614af8e35b3f030ba6ac9fbc881f2a35b906020015b60405180910390a1565b6000546001600160a01b0316331461044b5760405162461bcd60e51b815260040161018f9061065b565b6001600160a01b0381166104b05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161018f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600054600160a01b900460ff1661055b5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161018f565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b039091168152602001610417565b600054600160a01b900460ff16156105f05760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161018f565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861058b3390565b60006020828403121561063d57600080fd5b81356001600160a01b038116811461065457600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220fe588d9e2e063264e110d5655785686617cfce98203a43b27de15427645ebb7c64736f6c63430008050033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2690:17",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:17",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:17"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:17"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:17",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:17",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:17"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:17"
                  },
                  "nodeType": "YulIf",
                  "src": "200:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:17",
                "type": ""
              }
            ],
            "src": "14:286:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "406:102:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "416:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "428:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "439:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "424:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "416:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "458:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "473:6:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "489:3:17",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "494:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "485:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "485:11:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "498:1:17",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "481:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "481:19:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "469:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "469:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "451:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:51:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "451:51:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "375:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "386:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "397:4:17",
                "type": ""
              }
            ],
            "src": "305:203:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "608:92:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "618:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "630:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "641:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "626:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "626:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "618:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "660:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "685:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "678:6:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "678:14:17"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "671:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "671:22:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "653:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:41:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "653:41:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "577:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "588:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "599:4:17",
                "type": ""
              }
            ],
            "src": "513:187:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "879:170:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "896:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "907:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "889:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "889:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "889:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "930:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "941:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "926:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "926:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "946:2:17",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "919:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "919:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "919:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "969:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "980:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "965:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "965:18:17"
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "985:22:17",
                        "type": "",
                        "value": "Pausable: not paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "958:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "958:50:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "958:50:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1017:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1029:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1040:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1025:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1025:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1017:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "856:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "870:4:17",
                "type": ""
              }
            ],
            "src": "705:344:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1228:228:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1245:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1256:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1238:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1238:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1238:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1279:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1290:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1275:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1275:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1295:2:17",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1268:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1268:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1268:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1318:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1329:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1314:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1314:18:17"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1334:34:17",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1307:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1307:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1307:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1389:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1400:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1385:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1385:18:17"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1405:8:17",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1378:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1378:36:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1378:36:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1423:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1435:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1446:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1431:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1431:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1423:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1205:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1219:4:17",
                "type": ""
              }
            ],
            "src": "1054:402:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1635:166:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1652:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1663:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1645:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1645:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1645:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1686:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1697:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1682:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1682:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1702:2:17",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1675:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1675:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1675:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1725:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1736:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1721:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1721:18:17"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1741:18:17",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1714:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1714:46:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1714:46:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1769:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1781:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1792:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1777:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1777:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1769:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1612:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1626:4:17",
                "type": ""
              }
            ],
            "src": "1461:340:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1980:182:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1997:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2008:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1990:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1990:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1990:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2031:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2042:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2027:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2027:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2047:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2020:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2020:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2020:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2070:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2081:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2066:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2066:18:17"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2086:34:17",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2059:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2059:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2059:62:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2130:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2142:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2153:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2138:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2138:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2130:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1957:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1971:4:17",
                "type": ""
              }
            ],
            "src": "1806:356:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2341:165:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2358:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2369:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2351:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2351:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2351:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2392:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2403:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2388:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2388:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2408:2:17",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2381:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2381:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2381:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2431:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2442:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2427:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2427:18:17"
                      },
                      {
                        "hexValue": "50415553455f52454e4f554e434544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2447:17:17",
                        "type": "",
                        "value": "PAUSE_RENOUNCED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2420:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2420:45:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2420:45:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2474:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2486:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2497:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2482:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2482:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2474:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c061784a9a73be78ecd0fb390f97c85afcc476df4b1252fb2f5e24ee4ad406b5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2318:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2332:4:17",
                "type": ""
              }
            ],
            "src": "2167:339:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2612:76:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2622:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2634:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2645:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2630:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2630:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2622:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2664:9:17"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2675:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2657:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2657:25:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2657:25:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2581:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2592:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2603:4:17",
                "type": ""
              }
            ],
            "src": "2511:177:17"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c061784a9a73be78ecd0fb390f97c85afcc476df4b1252fb2f5e24ee4ad406b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"PAUSE_RENOUNCED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "250:3155:9:-:0;;;514:72;;;-1:-1:-1;;;;;;592:29:9;544:42;592:29;;;701:26;;;;;;;;;-1:-1:-1;867:17:10;909:18;;-1:-1:-1;;;;;;909:18:10;665:10:16;909:18:10;;;;;942:43;;665:10:16;;;;942:43:10;;867:17;;942:43;-1:-1:-1;935:5:11;925:15;;-1:-1:-1;;;;925:15:11;;;250:3155:9;;;;;;",
  "deployedSourceMap": "250:3155:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2708:76;;;:::i;:::-;;1042:84:11;1089:4;1112:7;-1:-1:-1;;;1112:7:11;;;;1042:84;;678:14:17;;671:22;653:41;;641:2;626:18;1042:84:11;;;;;;;;1700:145:10;;;:::i;2337:127:9:-;;;:::i;3240:163::-;;;:::i;1068:85:10:-;1114:7;1140:6;1068:85;;-1:-1:-1;;;;;1140:6:10;;;451:51:17;;439:2;424:18;1068:85:10;406:102:17;2900:111:9;;;;;;:::i;:::-;;:::i;1442:198::-;;;;;;:::i;:::-;;:::i;371:56::-;;422:5;371:56;;;;;2657:25:17;;;2645:2;2630:18;371:56:9;2612:76:17;1894:203:9;;;:::i;1994:240:10:-;;;;;;:::i;:::-;;:::i;2708:76:9:-;1114:7:10;1140:6;-1:-1:-1;;;;;1140:6:10;665:10:16;1280:23:10;1272:68;;;;-1:-1:-1;;;1272:68:10;;;;;;;:::i;:::-;;;;;;;;;2767:10:9::1;:8;:10::i;:::-;2708:76::o:0;1700:145:10:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:10;665:10:16;1280:23:10;1272:68;;;;-1:-1:-1;;;1272:68:10;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:10;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:10::1;::::0;;1700:145::o;2337:127:9:-;1114:7:10;1140:6;-1:-1:-1;;;;;1140:6:10;665:10:16;1280:23:10;1272:68;;;;-1:-1:-1;;;1272:68:10;;;;;;;:::i;:::-;2403:16:9::1;::::0;-1:-1:-1;;;2403:16:9;::::1;;;2402:17;2394:45;;;::::0;-1:-1:-1;;;2394:45:9;;2369:2:17;2394:45:9::1;::::0;::::1;2351:21:17::0;2408:2;2388:18;;;2381:30;-1:-1:-1;;;2427:18:17;;;2420:45;2482:18;;2394:45:9::1;2341:165:17::0;2394:45:9::1;2449:8;:6;:8::i;3240:163::-:0;1114:7:10;1140:6;-1:-1:-1;;;;;1140:6:10;665:10:16;1280:23:10;1272:68;;;;-1:-1:-1;;;1272:68:10;;;;;;;:::i;:::-;1089:4:11;1112:7;-1:-1:-1;;;1112:7:11;;;;3301:61:9::1;;;3329:22;:20;:22::i;:::-;3371:25;:23;:25::i;2900:111::-:0;1114:7:10;1140:6;-1:-1:-1;;;;;1140:6:10;665:10:16;1280:23:10;1272:68;;;;-1:-1:-1;;;1272:68:10;;;;;;;:::i;:::-;2977:27:9::1;2995:8;2977:17;:27::i;:::-;2900:111:::0;:::o;1442:198::-;1114:7:10;1140:6;-1:-1:-1;;;;;1140:6:10;665:10:16;1280:23:10;1272:68;;;;-1:-1:-1;;;1272:68:10;;;;;;;:::i;:::-;1526:19:9::1;:32:::0;;-1:-1:-1;;;;;;1526:32:9::1;-1:-1:-1::0;;;;;1526:32:9;::::1;::::0;;::::1;::::0;;;1574:59:::1;::::0;1617:15:::1;2657:25:17::0;;1574:59:9::1;::::0;2645:2:17;2630:18;1574:59:9::1;;;;;;;1442:198:::0;:::o;1894:203::-;1114:7:10;1140:6;-1:-1:-1;;;;;1140:6:10;665:10:16;1280:23:10;1272:68;;;;-1:-1:-1;;;1272:68:10;;;;;;;:::i;:::-;1089:4:11;1112:7;-1:-1:-1;;;1112:7:11;;;;1951:61:9::1;;;1979:22;:20;:22::i;:::-;2040:4;2021:23:::0;;-1:-1:-1;;;;2021:23:9::1;-1:-1:-1::0;;;2021:23:9::1;::::0;;2059:31:::1;::::0;2079:10:::1;451:51:17::0;;2059:31:9::1;::::0;439:2:17;424:18;2059:31:9::1;;;;;;;;1894:203::o:0;1994:240:10:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:10;665:10:16;1280:23:10;1272:68;;;;-1:-1:-1;;;1272:68:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:10;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:10;;1256:2:17;2074:73:10::1;::::0;::::1;1238:21:17::0;1295:2;1275:18;;;1268:30;1334:34;1314:18;;;1307:62;-1:-1:-1;;;1385:18:17;;;1378:36;1431:19;;2074:73:10::1;1228:228:17::0;2074:73:10::1;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:10;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:10::1;-1:-1:-1::0;;;;;2210:17:10;;;::::1;::::0;;;::::1;::::0;;1994:240::o;2054:117:11:-;1089:4;1112:7;-1:-1:-1;;;1112:7:11;;;;1613:41;;;;-1:-1:-1;;;1613:41:11;;907:2:17;1613:41:11;;;889:21:17;946:2;926:18;;;919:30;-1:-1:-1;;;965:18:17;;;958:50;1025:18;;1613:41:11;879:170:17;1613:41:11;2122:5:::1;2112:15:::0;;-1:-1:-1;;;;2112:15:11::1;::::0;;2142:22:::1;665:10:16::0;2151:12:11::1;2142:22;::::0;-1:-1:-1;;;;;469:32:17;;;451:51;;439:2;424:18;2142:22:11::1;406:102:17::0;1807:115:11;1089:4;1112:7;-1:-1:-1;;;1112:7:11;;;;1355:9;1347:38;;;;-1:-1:-1;;;1347:38:11;;1663:2:17;1347:38:11;;;1645:21:17;1702:2;1682:18;;;1675:30;-1:-1:-1;;;1721:18:17;;;1714:46;1777:18;;1347:38:11;1635:166:17;1347:38:11;1866:7:::1;:14:::0;;-1:-1:-1;;;;1866:14:11::1;-1:-1:-1::0;;;1866:14:11::1;::::0;;1895:20:::1;1902:12;665:10:16::0;;586:96;14:286:17;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;168:23;;-1:-1:-1;;;;;220:31:17;;210:42;;200:2;;266:1;263;256:12;200:2;289:5;84:216;-1:-1:-1;;;84:216:17:o;1806:356::-;2008:2;1990:21;;;2027:18;;;2020:30;2086:34;2081:2;2066:18;;2059:62;2153:2;2138:18;;1980:182::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\n/// @author Syndicate Inc.\n/// @notice Core module for owner functionality\ncontract SyndicateOwnerLogic is Ownable, Pausable {\n    // Use a consistent denominator for basis point calculations\n    uint256 public constant BASIS_POINTS_DENOMINATOR = 10000;\n    // Address of the Gnosis Safe where the Syndicate profit share is collected.\n    address syndicateFeeAddress = 0x40dB79f7f18C468c6552538b488c58B5E72bf4D9;\n    bool pausingRenounced = false;\n\n    /// @notice Used to initialize the SyndicateOwnershipLogic contract.\n    constructor() Ownable() {}\n\n    // Events------------------------------------------------------------------\n\n    /// @notice Emit an event when the owner of the contract sets a new\n    /// contract fee address\n    event ownerSetterSyndicateFeeAddress(\n        address indexed contractFeeAddress,\n        uint256 timestamp\n    );\n\n    /// @notice Emit an event when the owner renounces ability to pause\n    /// the contract\n    event ownerRenouncedPause(address owner);\n\n    // Owner functions----------------------------------------------------------\n\n    /// @notice set a new fee address for the contract function that can only\n    /// be triggered by the contract owner.\n    /// @param feeAddress The owner's new contract fee address\n    function ownerSetSyndicateFeeAddress(address feeAddress) public onlyOwner {\n        syndicateFeeAddress = feeAddress;\n\n        emit ownerSetterSyndicateFeeAddress(feeAddress, block.timestamp);\n    }\n\n    /// @notice Used by the owner to renounce ability to pause the contract\n    /// @notice If necessary, unpauses the contract before ownership is\n    /// renounced to ensure that functions with the whenNotPaused() modifier\n    /// are not locked\n    function ownerRenouncePause() public onlyOwner {\n        if (paused()) {\n            ownerUnpauseContract();\n        }\n        pausingRenounced = true;\n        emit ownerRenouncedPause(msg.sender);\n    }\n\n    /// @notice Emergency pause function that can only be triggered by the\n    /// contract owner\n    /// @notice Its purpose is to pause functions with the whenNotPaused() modifier.\n    ///  All other functions will work when paused\n    function ownerPauseContract() public onlyOwner {\n        require(!pausingRenounced, \"PAUSE_RENOUNCED\");\n        _pause();\n    }\n\n    /// @notice Emergency unpause function that can only be triggered by the\n    /// contract owner\n    /// @notice Its purpose is to unpause functions with the whenNotPaused() modifier.\n    ///  All other functions will work when paused\n    function ownerUnpauseContract() public onlyOwner {\n        _unpause();\n    }\n\n    /// @notice Transfers ownership to the provided address.\n    /// @param newOwner The new owner's address.\n    function ownerTransferOwnership(address newOwner) public onlyOwner {\n        transferOwnership(newOwner);\n    }\n\n    /// @notice Renounce ownership of the contract\n    /// @notice If necessary, unpauses the contract before ownership is\n    /// renounced to ensure that functions with the whenNotPaused() modifier\n    /// are not locked\n    function ownerRenounceOwnership() public onlyOwner {\n        if (paused()) {\n            ownerUnpauseContract();\n        }\n        super.renounceOwnership();\n    }\n}\n",
  "sourcePath": "/home/will/Syndicate/contracts/SyndicateOwnerLogic.sol",
  "ast": {
    "absolutePath": "/home/will/Syndicate/contracts/SyndicateOwnerLogic.sol",
    "exportedSymbols": {
      "Context": [
        5812
      ],
      "Ownable": [
        5059
      ],
      "Pausable": [
        5151
      ],
      "SyndicateOwnerLogic": [
        4949
      ]
    },
    "id": 4950,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4813,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4814,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4950,
        "sourceUnit": 5060,
        "src": "65:52:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 4815,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4950,
        "sourceUnit": 5152,
        "src": "118:55:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4817,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5059,
              "src": "282:7:9"
            },
            "id": 4818,
            "nodeType": "InheritanceSpecifier",
            "src": "282:7:9"
          },
          {
            "baseName": {
              "id": 4819,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5151,
              "src": "291:8:9"
            },
            "id": 4820,
            "nodeType": "InheritanceSpecifier",
            "src": "291:8:9"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4816,
          "nodeType": "StructuredDocumentation",
          "src": "175:75:9",
          "text": "@author Syndicate Inc.\n @notice Core module for owner functionality"
        },
        "fullyImplemented": true,
        "id": 4949,
        "linearizedBaseContracts": [
          4949,
          5151,
          5059,
          5812
        ],
        "name": "SyndicateOwnerLogic",
        "nameLocation": "259:19:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "cfa498a3",
            "id": 4823,
            "mutability": "constant",
            "name": "BASIS_POINTS_DENOMINATOR",
            "nameLocation": "395:24:9",
            "nodeType": "VariableDeclaration",
            "scope": 4949,
            "src": "371:56:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4821,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "371:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 4822,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "422:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4826,
            "mutability": "mutable",
            "name": "syndicateFeeAddress",
            "nameLocation": "522:19:9",
            "nodeType": "VariableDeclaration",
            "scope": 4949,
            "src": "514:72:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4824,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "514:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834306442373966376631384334363863363535323533386234383863353842354537326266344439",
              "id": 4825,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "544:42:9",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x40dB79f7f18C468c6552538b488c58B5E72bf4D9"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4829,
            "mutability": "mutable",
            "name": "pausingRenounced",
            "nameLocation": "597:16:9",
            "nodeType": "VariableDeclaration",
            "scope": 4949,
            "src": "592:29:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4827,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "592:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 4828,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "616:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4835,
              "nodeType": "Block",
              "src": "725:2:9",
              "statements": []
            },
            "documentation": {
              "id": 4830,
              "nodeType": "StructuredDocumentation",
              "src": "628:68:9",
              "text": "@notice Used to initialize the SyndicateOwnershipLogic contract."
            },
            "id": 4836,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 4833,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4832,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5059,
                  "src": "715:7:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "715:9:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "712:2:9"
            },
            "returnParameters": {
              "id": 4834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "725:0:9"
            },
            "scope": 4949,
            "src": "701:26:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4837,
              "nodeType": "StructuredDocumentation",
              "src": "814:96:9",
              "text": "@notice Emit an event when the owner of the contract sets a new\n contract fee address"
            },
            "id": 4843,
            "name": "ownerSetterSyndicateFeeAddress",
            "nameLocation": "921:30:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4839,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractFeeAddress",
                  "nameLocation": "977:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4843,
                  "src": "961:34:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4841,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1013:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4843,
                  "src": "1005:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "951:77:9"
            },
            "src": "915:114:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4844,
              "nodeType": "StructuredDocumentation",
              "src": "1035:88:9",
              "text": "@notice Emit an event when the owner renounces ability to pause\n the contract"
            },
            "id": 4848,
            "name": "ownerRenouncedPause",
            "nameLocation": "1134:19:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4846,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1162:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4848,
                  "src": "1154:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1153:15:9"
            },
            "src": "1128:41:9"
          },
          {
            "body": {
              "id": 4866,
              "nodeType": "Block",
              "src": "1516:124:9",
              "statements": [
                {
                  "expression": {
                    "id": 4858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4856,
                      "name": "syndicateFeeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4826,
                      "src": "1526:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4857,
                      "name": "feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4851,
                      "src": "1548:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1526:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4859,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:32:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4861,
                        "name": "feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4851,
                        "src": "1605:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4862,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "1617:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1617:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4860,
                      "name": "ownerSetterSyndicateFeeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4843,
                      "src": "1574:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1574:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4865,
                  "nodeType": "EmitStatement",
                  "src": "1569:64:9"
                }
              ]
            },
            "documentation": {
              "id": 4849,
              "nodeType": "StructuredDocumentation",
              "src": "1257:180:9",
              "text": "@notice set a new fee address for the contract function that can only\n be triggered by the contract owner.\n @param feeAddress The owner's new contract fee address"
            },
            "functionSelector": "bfd9a7e1",
            "id": 4867,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4854,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4853,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5008,
                  "src": "1506:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1506:9:9"
              }
            ],
            "name": "ownerSetSyndicateFeeAddress",
            "nameLocation": "1451:27:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4851,
                  "mutability": "mutable",
                  "name": "feeAddress",
                  "nameLocation": "1487:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4867,
                  "src": "1479:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1478:20:9"
            },
            "returnParameters": {
              "id": 4855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1516:0:9"
            },
            "scope": 4949,
            "src": "1442:198:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4889,
              "nodeType": "Block",
              "src": "1941:156:9",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4873,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5095,
                      "src": "1955:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 4874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1955:8:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4879,
                  "nodeType": "IfStatement",
                  "src": "1951:61:9",
                  "trueBody": {
                    "id": 4878,
                    "nodeType": "Block",
                    "src": "1965:47:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4875,
                            "name": "ownerUnpauseContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4916,
                            "src": "1979:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1979:22:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4877,
                        "nodeType": "ExpressionStatement",
                        "src": "1979:22:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 4882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4880,
                      "name": "pausingRenounced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4829,
                      "src": "2021:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2040:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2021:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4883,
                  "nodeType": "ExpressionStatement",
                  "src": "2021:23:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4885,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2079:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2079:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4884,
                      "name": "ownerRenouncedPause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4848,
                      "src": "2059:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2059:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4888,
                  "nodeType": "EmitStatement",
                  "src": "2054:36:9"
                }
              ]
            },
            "documentation": {
              "id": 4868,
              "nodeType": "StructuredDocumentation",
              "src": "1646:243:9",
              "text": "@notice Used by the owner to renounce ability to pause the contract\n @notice If necessary, unpauses the contract before ownership is\n renounced to ensure that functions with the whenNotPaused() modifier\n are not locked"
            },
            "functionSelector": "dac128ad",
            "id": 4890,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4871,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4870,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5008,
                  "src": "1931:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1931:9:9"
              }
            ],
            "name": "ownerRenouncePause",
            "nameLocation": "1903:18:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1921:2:9"
            },
            "returnParameters": {
              "id": 4872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1941:0:9"
            },
            "scope": 4949,
            "src": "1894:203:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4905,
              "nodeType": "Block",
              "src": "2384:80:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2402:17:9",
                        "subExpression": {
                          "id": 4897,
                          "name": "pausingRenounced",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4829,
                          "src": "2403:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50415553455f52454e4f554e434544",
                        "id": 4899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2421:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c061784a9a73be78ecd0fb390f97c85afcc476df4b1252fb2f5e24ee4ad406b5",
                          "typeString": "literal_string \"PAUSE_RENOUNCED\""
                        },
                        "value": "PAUSE_RENOUNCED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c061784a9a73be78ecd0fb390f97c85afcc476df4b1252fb2f5e24ee4ad406b5",
                          "typeString": "literal_string \"PAUSE_RENOUNCED\""
                        }
                      ],
                      "id": 4896,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2394:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2394:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4901,
                  "nodeType": "ExpressionStatement",
                  "src": "2394:45:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4902,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5134,
                      "src": "2449:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2449:8:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4904,
                  "nodeType": "ExpressionStatement",
                  "src": "2449:8:9"
                }
              ]
            },
            "documentation": {
              "id": 4891,
              "nodeType": "StructuredDocumentation",
              "src": "2103:229:9",
              "text": "@notice Emergency pause function that can only be triggered by the\n contract owner\n @notice Its purpose is to pause functions with the whenNotPaused() modifier.\n  All other functions will work when paused"
            },
            "functionSelector": "79f90d6c",
            "id": 4906,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4894,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4893,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5008,
                  "src": "2374:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2374:9:9"
              }
            ],
            "name": "ownerPauseContract",
            "nameLocation": "2346:18:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2364:2:9"
            },
            "returnParameters": {
              "id": 4895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2384:0:9"
            },
            "scope": 4949,
            "src": "2337:127:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4915,
              "nodeType": "Block",
              "src": "2757:27:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4912,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5150,
                      "src": "2767:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2767:10:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4914,
                  "nodeType": "ExpressionStatement",
                  "src": "2767:10:9"
                }
              ]
            },
            "documentation": {
              "id": 4907,
              "nodeType": "StructuredDocumentation",
              "src": "2470:233:9",
              "text": "@notice Emergency unpause function that can only be triggered by the\n contract owner\n @notice Its purpose is to unpause functions with the whenNotPaused() modifier.\n  All other functions will work when paused"
            },
            "functionSelector": "12285d40",
            "id": 4916,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4910,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4909,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5008,
                  "src": "2747:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2747:9:9"
              }
            ],
            "name": "ownerUnpauseContract",
            "nameLocation": "2717:20:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2737:2:9"
            },
            "returnParameters": {
              "id": 4911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2757:0:9"
            },
            "scope": 4949,
            "src": "2708:76:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4928,
              "nodeType": "Block",
              "src": "2967:44:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4925,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4919,
                        "src": "2995:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4924,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5058,
                      "src": "2977:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2977:27:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4927,
                  "nodeType": "ExpressionStatement",
                  "src": "2977:27:9"
                }
              ]
            },
            "documentation": {
              "id": 4917,
              "nodeType": "StructuredDocumentation",
              "src": "2790:105:9",
              "text": "@notice Transfers ownership to the provided address.\n @param newOwner The new owner's address."
            },
            "functionSelector": "a09cca93",
            "id": 4929,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4922,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4921,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5008,
                  "src": "2957:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2957:9:9"
              }
            ],
            "name": "ownerTransferOwnership",
            "nameLocation": "2909:22:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4919,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "2940:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4929,
                  "src": "2932:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2932:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2931:18:9"
            },
            "returnParameters": {
              "id": 4923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2967:0:9"
            },
            "scope": 4949,
            "src": "2900:111:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4947,
              "nodeType": "Block",
              "src": "3291:112:9",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4935,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5095,
                      "src": "3305:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 4936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3305:8:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4941,
                  "nodeType": "IfStatement",
                  "src": "3301:61:9",
                  "trueBody": {
                    "id": 4940,
                    "nodeType": "Block",
                    "src": "3315:47:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4937,
                            "name": "ownerUnpauseContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4916,
                            "src": "3329:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3329:22:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4939,
                        "nodeType": "ExpressionStatement",
                        "src": "3329:22:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4942,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3371:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SyndicateOwnerLogic_$4949_$",
                          "typeString": "type(contract super SyndicateOwnerLogic)"
                        }
                      },
                      "id": 4944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "renounceOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5030,
                      "src": "3371:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3371:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4946,
                  "nodeType": "ExpressionStatement",
                  "src": "3371:25:9"
                }
              ]
            },
            "documentation": {
              "id": 4930,
              "nodeType": "StructuredDocumentation",
              "src": "3017:218:9",
              "text": "@notice Renounce ownership of the contract\n @notice If necessary, unpauses the contract before ownership is\n renounced to ensure that functions with the whenNotPaused() modifier\n are not locked"
            },
            "functionSelector": "81abf408",
            "id": 4948,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4933,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4932,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5008,
                  "src": "3281:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3281:9:9"
              }
            ],
            "name": "ownerRenounceOwnership",
            "nameLocation": "3249:22:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3271:2:9"
            },
            "returnParameters": {
              "id": 4934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3291:0:9"
            },
            "scope": 4949,
            "src": "3240:163:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4950,
        "src": "250:3155:9",
        "usedErrors": []
      }
    ],
    "src": "40:3366:9"
  },
  "legacyAST": {
    "absolutePath": "/home/will/Syndicate/contracts/SyndicateOwnerLogic.sol",
    "exportedSymbols": {
      "Context": [
        5812
      ],
      "Ownable": [
        5059
      ],
      "Pausable": [
        5151
      ],
      "SyndicateOwnerLogic": [
        4949
      ]
    },
    "id": 4950,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4813,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4814,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4950,
        "sourceUnit": 5060,
        "src": "65:52:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 4815,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4950,
        "sourceUnit": 5152,
        "src": "118:55:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4817,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5059,
              "src": "282:7:9"
            },
            "id": 4818,
            "nodeType": "InheritanceSpecifier",
            "src": "282:7:9"
          },
          {
            "baseName": {
              "id": 4819,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5151,
              "src": "291:8:9"
            },
            "id": 4820,
            "nodeType": "InheritanceSpecifier",
            "src": "291:8:9"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4816,
          "nodeType": "StructuredDocumentation",
          "src": "175:75:9",
          "text": "@author Syndicate Inc.\n @notice Core module for owner functionality"
        },
        "fullyImplemented": true,
        "id": 4949,
        "linearizedBaseContracts": [
          4949,
          5151,
          5059,
          5812
        ],
        "name": "SyndicateOwnerLogic",
        "nameLocation": "259:19:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "cfa498a3",
            "id": 4823,
            "mutability": "constant",
            "name": "BASIS_POINTS_DENOMINATOR",
            "nameLocation": "395:24:9",
            "nodeType": "VariableDeclaration",
            "scope": 4949,
            "src": "371:56:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4821,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "371:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 4822,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "422:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4826,
            "mutability": "mutable",
            "name": "syndicateFeeAddress",
            "nameLocation": "522:19:9",
            "nodeType": "VariableDeclaration",
            "scope": 4949,
            "src": "514:72:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4824,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "514:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834306442373966376631384334363863363535323533386234383863353842354537326266344439",
              "id": 4825,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "544:42:9",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x40dB79f7f18C468c6552538b488c58B5E72bf4D9"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4829,
            "mutability": "mutable",
            "name": "pausingRenounced",
            "nameLocation": "597:16:9",
            "nodeType": "VariableDeclaration",
            "scope": 4949,
            "src": "592:29:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4827,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "592:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 4828,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "616:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4835,
              "nodeType": "Block",
              "src": "725:2:9",
              "statements": []
            },
            "documentation": {
              "id": 4830,
              "nodeType": "StructuredDocumentation",
              "src": "628:68:9",
              "text": "@notice Used to initialize the SyndicateOwnershipLogic contract."
            },
            "id": 4836,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 4833,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4832,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5059,
                  "src": "715:7:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "715:9:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "712:2:9"
            },
            "returnParameters": {
              "id": 4834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "725:0:9"
            },
            "scope": 4949,
            "src": "701:26:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4837,
              "nodeType": "StructuredDocumentation",
              "src": "814:96:9",
              "text": "@notice Emit an event when the owner of the contract sets a new\n contract fee address"
            },
            "id": 4843,
            "name": "ownerSetterSyndicateFeeAddress",
            "nameLocation": "921:30:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4839,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractFeeAddress",
                  "nameLocation": "977:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4843,
                  "src": "961:34:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4841,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1013:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4843,
                  "src": "1005:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "951:77:9"
            },
            "src": "915:114:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4844,
              "nodeType": "StructuredDocumentation",
              "src": "1035:88:9",
              "text": "@notice Emit an event when the owner renounces ability to pause\n the contract"
            },
            "id": 4848,
            "name": "ownerRenouncedPause",
            "nameLocation": "1134:19:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4846,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1162:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4848,
                  "src": "1154:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1153:15:9"
            },
            "src": "1128:41:9"
          },
          {
            "body": {
              "id": 4866,
              "nodeType": "Block",
              "src": "1516:124:9",
              "statements": [
                {
                  "expression": {
                    "id": 4858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4856,
                      "name": "syndicateFeeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4826,
                      "src": "1526:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4857,
                      "name": "feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4851,
                      "src": "1548:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1526:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4859,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:32:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4861,
                        "name": "feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4851,
                        "src": "1605:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4862,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "1617:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1617:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4860,
                      "name": "ownerSetterSyndicateFeeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4843,
                      "src": "1574:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1574:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4865,
                  "nodeType": "EmitStatement",
                  "src": "1569:64:9"
                }
              ]
            },
            "documentation": {
              "id": 4849,
              "nodeType": "StructuredDocumentation",
              "src": "1257:180:9",
              "text": "@notice set a new fee address for the contract function that can only\n be triggered by the contract owner.\n @param feeAddress The owner's new contract fee address"
            },
            "functionSelector": "bfd9a7e1",
            "id": 4867,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4854,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4853,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5008,
                  "src": "1506:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1506:9:9"
              }
            ],
            "name": "ownerSetSyndicateFeeAddress",
            "nameLocation": "1451:27:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4851,
                  "mutability": "mutable",
                  "name": "feeAddress",
                  "nameLocation": "1487:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4867,
                  "src": "1479:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1478:20:9"
            },
            "returnParameters": {
              "id": 4855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1516:0:9"
            },
            "scope": 4949,
            "src": "1442:198:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4889,
              "nodeType": "Block",
              "src": "1941:156:9",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4873,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5095,
                      "src": "1955:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 4874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1955:8:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4879,
                  "nodeType": "IfStatement",
                  "src": "1951:61:9",
                  "trueBody": {
                    "id": 4878,
                    "nodeType": "Block",
                    "src": "1965:47:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4875,
                            "name": "ownerUnpauseContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4916,
                            "src": "1979:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1979:22:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4877,
                        "nodeType": "ExpressionStatement",
                        "src": "1979:22:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 4882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4880,
                      "name": "pausingRenounced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4829,
                      "src": "2021:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2040:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2021:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4883,
                  "nodeType": "ExpressionStatement",
                  "src": "2021:23:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4885,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2079:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2079:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4884,
                      "name": "ownerRenouncedPause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4848,
                      "src": "2059:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2059:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4888,
                  "nodeType": "EmitStatement",
                  "src": "2054:36:9"
                }
              ]
            },
            "documentation": {
              "id": 4868,
              "nodeType": "StructuredDocumentation",
              "src": "1646:243:9",
              "text": "@notice Used by the owner to renounce ability to pause the contract\n @notice If necessary, unpauses the contract before ownership is\n renounced to ensure that functions with the whenNotPaused() modifier\n are not locked"
            },
            "functionSelector": "dac128ad",
            "id": 4890,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4871,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4870,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5008,
                  "src": "1931:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1931:9:9"
              }
            ],
            "name": "ownerRenouncePause",
            "nameLocation": "1903:18:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1921:2:9"
            },
            "returnParameters": {
              "id": 4872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1941:0:9"
            },
            "scope": 4949,
            "src": "1894:203:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4905,
              "nodeType": "Block",
              "src": "2384:80:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2402:17:9",
                        "subExpression": {
                          "id": 4897,
                          "name": "pausingRenounced",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4829,
                          "src": "2403:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50415553455f52454e4f554e434544",
                        "id": 4899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2421:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c061784a9a73be78ecd0fb390f97c85afcc476df4b1252fb2f5e24ee4ad406b5",
                          "typeString": "literal_string \"PAUSE_RENOUNCED\""
                        },
                        "value": "PAUSE_RENOUNCED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c061784a9a73be78ecd0fb390f97c85afcc476df4b1252fb2f5e24ee4ad406b5",
                          "typeString": "literal_string \"PAUSE_RENOUNCED\""
                        }
                      ],
                      "id": 4896,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2394:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2394:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4901,
                  "nodeType": "ExpressionStatement",
                  "src": "2394:45:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4902,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5134,
                      "src": "2449:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2449:8:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4904,
                  "nodeType": "ExpressionStatement",
                  "src": "2449:8:9"
                }
              ]
            },
            "documentation": {
              "id": 4891,
              "nodeType": "StructuredDocumentation",
              "src": "2103:229:9",
              "text": "@notice Emergency pause function that can only be triggered by the\n contract owner\n @notice Its purpose is to pause functions with the whenNotPaused() modifier.\n  All other functions will work when paused"
            },
            "functionSelector": "79f90d6c",
            "id": 4906,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4894,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4893,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5008,
                  "src": "2374:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2374:9:9"
              }
            ],
            "name": "ownerPauseContract",
            "nameLocation": "2346:18:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2364:2:9"
            },
            "returnParameters": {
              "id": 4895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2384:0:9"
            },
            "scope": 4949,
            "src": "2337:127:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4915,
              "nodeType": "Block",
              "src": "2757:27:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4912,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5150,
                      "src": "2767:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2767:10:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4914,
                  "nodeType": "ExpressionStatement",
                  "src": "2767:10:9"
                }
              ]
            },
            "documentation": {
              "id": 4907,
              "nodeType": "StructuredDocumentation",
              "src": "2470:233:9",
              "text": "@notice Emergency unpause function that can only be triggered by the\n contract owner\n @notice Its purpose is to unpause functions with the whenNotPaused() modifier.\n  All other functions will work when paused"
            },
            "functionSelector": "12285d40",
            "id": 4916,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4910,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4909,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5008,
                  "src": "2747:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2747:9:9"
              }
            ],
            "name": "ownerUnpauseContract",
            "nameLocation": "2717:20:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2737:2:9"
            },
            "returnParameters": {
              "id": 4911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2757:0:9"
            },
            "scope": 4949,
            "src": "2708:76:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4928,
              "nodeType": "Block",
              "src": "2967:44:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4925,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4919,
                        "src": "2995:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4924,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5058,
                      "src": "2977:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2977:27:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4927,
                  "nodeType": "ExpressionStatement",
                  "src": "2977:27:9"
                }
              ]
            },
            "documentation": {
              "id": 4917,
              "nodeType": "StructuredDocumentation",
              "src": "2790:105:9",
              "text": "@notice Transfers ownership to the provided address.\n @param newOwner The new owner's address."
            },
            "functionSelector": "a09cca93",
            "id": 4929,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4922,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4921,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5008,
                  "src": "2957:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2957:9:9"
              }
            ],
            "name": "ownerTransferOwnership",
            "nameLocation": "2909:22:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4919,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "2940:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4929,
                  "src": "2932:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2932:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2931:18:9"
            },
            "returnParameters": {
              "id": 4923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2967:0:9"
            },
            "scope": 4949,
            "src": "2900:111:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4947,
              "nodeType": "Block",
              "src": "3291:112:9",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4935,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5095,
                      "src": "3305:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 4936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3305:8:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4941,
                  "nodeType": "IfStatement",
                  "src": "3301:61:9",
                  "trueBody": {
                    "id": 4940,
                    "nodeType": "Block",
                    "src": "3315:47:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4937,
                            "name": "ownerUnpauseContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4916,
                            "src": "3329:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3329:22:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4939,
                        "nodeType": "ExpressionStatement",
                        "src": "3329:22:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4942,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3371:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SyndicateOwnerLogic_$4949_$",
                          "typeString": "type(contract super SyndicateOwnerLogic)"
                        }
                      },
                      "id": 4944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "renounceOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5030,
                      "src": "3371:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3371:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4946,
                  "nodeType": "ExpressionStatement",
                  "src": "3371:25:9"
                }
              ]
            },
            "documentation": {
              "id": 4930,
              "nodeType": "StructuredDocumentation",
              "src": "3017:218:9",
              "text": "@notice Renounce ownership of the contract\n @notice If necessary, unpauses the contract before ownership is\n renounced to ensure that functions with the whenNotPaused() modifier\n are not locked"
            },
            "functionSelector": "81abf408",
            "id": 4948,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4933,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4932,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5008,
                  "src": "3281:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3281:9:9"
              }
            ],
            "name": "ownerRenounceOwnership",
            "nameLocation": "3249:22:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3271:2:9"
            },
            "returnParameters": {
              "id": 4934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3291:0:9"
            },
            "scope": 4949,
            "src": "3240:163:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4950,
        "src": "250:3155:9",
        "usedErrors": []
      }
    ],
    "src": "40:3366:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.5+commit.a4f2e591.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-06-21T04:55:02.431Z",
  "devdoc": {
    "author": "Syndicate Inc.",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerSetSyndicateFeeAddress(address)": {
        "params": {
          "feeAddress": "The owner's new contract fee address"
        }
      },
      "ownerTransferOwnership(address)": {
        "params": {
          "newOwner": "The new owner's address."
        }
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "ownerRenouncedPause(address)": {
        "notice": "Emit an event when the owner renounces ability to pause the contract"
      },
      "ownerSetterSyndicateFeeAddress(address,uint256)": {
        "notice": "Emit an event when the owner of the contract sets a new contract fee address"
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Used to initialize the SyndicateOwnershipLogic contract."
      },
      "ownerPauseContract()": {
        "notice": "Emergency pause function that can only be triggered by the contract ownerIts purpose is to pause functions with the whenNotPaused() modifier.  All other functions will work when paused"
      },
      "ownerRenounceOwnership()": {
        "notice": "Renounce ownership of the contractIf necessary, unpauses the contract before ownership is renounced to ensure that functions with the whenNotPaused() modifier are not locked"
      },
      "ownerRenouncePause()": {
        "notice": "Used by the owner to renounce ability to pause the contractIf necessary, unpauses the contract before ownership is renounced to ensure that functions with the whenNotPaused() modifier are not locked"
      },
      "ownerSetSyndicateFeeAddress(address)": {
        "notice": "set a new fee address for the contract function that can only be triggered by the contract owner."
      },
      "ownerTransferOwnership(address)": {
        "notice": "Transfers ownership to the provided address."
      },
      "ownerUnpauseContract()": {
        "notice": "Emergency unpause function that can only be triggered by the contract ownerIts purpose is to unpause functions with the whenNotPaused() modifier.  All other functions will work when paused"
      }
    },
    "notice": "Core module for owner functionality",
    "version": 1
  }
}
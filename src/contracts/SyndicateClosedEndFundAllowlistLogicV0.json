{
  "contractName": "SyndicateClosedEndFundAllowlistLogicV0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "storeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "syndicateAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "memberAddress",
          "type": "address"
        }
      ],
      "name": "AddressAllowed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "syndicateAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "memberAddress",
          "type": "address"
        }
      ],
      "name": "AddressBlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "syndicateAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "allowlistEnabled",
          "type": "bool"
        }
      ],
      "name": "AllowlistEnabledUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractFeeAddress",
          "type": "address"
        }
      ],
      "name": "SyndicateFeeAddressUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASIS_POINTS_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSyndicateFeeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerRenounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeAddress",
          "type": "address"
        }
      ],
      "name": "ownerSetSyndicateFeeAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "ownerTransferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "syndicateAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowlistEnabled",
          "type": "bool"
        }
      ],
      "name": "managerSetAllowlistEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "syndicateAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "memberAddresses",
          "type": "address[]"
        }
      ],
      "name": "managerAllowAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "syndicateAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "memberAddresses",
          "type": "address[]"
        }
      ],
      "name": "managerBlockAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"storeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"syndicateAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"}],\"name\":\"AddressAllowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"syndicateAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"}],\"name\":\"AddressBlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"syndicateAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"allowlistEnabled\",\"type\":\"bool\"}],\"name\":\"AllowlistEnabledUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractFeeAddress\",\"type\":\"address\"}],\"name\":\"SyndicateFeeAddressUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSyndicateFeeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"syndicateAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"memberAddresses\",\"type\":\"address[]\"}],\"name\":\"managerAllowAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"syndicateAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"memberAddresses\",\"type\":\"address[]\"}],\"name\":\"managerBlockAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"syndicateAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowlistEnabled\",\"type\":\"bool\"}],\"name\":\"managerSetAllowlistEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerRenounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeAddress\",\"type\":\"address\"}],\"name\":\"ownerSetSyndicateFeeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownerTransferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Syndicate Inc.\",\"events\":{\"AddressAllowed(address,address)\":{\"details\":\"These events can be used to notify a member off-chain that their address is now allowedThe timestamp is not critical here and in the below events, so it is not included to save on gas costs. When a timestamp is necessary, it can be pulled by evaluating the block that an event was contained in (since the timestamp is just the block.timestamp)\"},\"AddressBlocked(address,address)\":{\"details\":\"These events can be used to notify a member off-chain that their address is now blocked (e.g. removed from the allowlist)\"},\"AllowlistEnabledUpdated(address,bool)\":{\"details\":\"These events can be used to notify prospective members off-chain whether membership is restricted or not.\"}},\"kind\":\"dev\",\"methods\":{\"getSyndicateFeeAddress()\":{\"details\":\"This function is needed to allow inheriting contracts to only be able to view but not change syndicateFeeAddress without going through ownerSetSyndicateFeeAddress\"},\"managerAllowAddresses(address,address[])\":{\"details\":\"Allowing a single address costs 31527 in gas without an array and 32445 in gas with an array. This is a difference in cost of $0.17 at current gas prices, which is a worthwhile trade off considering that (a) allowing only one address will be less common than allowing multiple addresses and (b) having two different allowAddress functions poses a security risk if we forget to reconcile changes between them\",\"params\":{\"memberAddresses\":\"An array of addresses to be allowed by the Syndicate\",\"syndicateAddress\":\"The address of the Syndicate to accept the allowedAdresses\"}},\"managerBlockAddresses(address,address[])\":{\"params\":{\"memberAddresses\":\"The array of member addresses to remove.\",\"syndicateAddress\":\"The address of the Syndicate that contains the allowlist\"}},\"managerSetAllowlistEnabled(address,bool)\":{\"params\":{\"allowlistEnabled\":\"True if the Syndicate ONLY accepts deposits from allowed addresses. False if any (accredited) member can make a deposit.\",\"syndicateAddress\":\"The address of the Syndicate\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerSetSyndicateFeeAddress(address)\":{\"params\":{\"feeAddress\":\"The owner's new contract fee address\"}},\"ownerTransferOwnership(address)\":{\"params\":{\"newOwner\":\"The new owner's address.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AddressAllowed(address,address)\":{\"notice\":\"A manager adds a member's wallet address to the allowlist.\"},\"AddressBlocked(address,address)\":{\"notice\":\"A manager removes a member's wallet address from the allowlist.\"},\"AllowlistEnabledUpdated(address,bool)\":{\"notice\":\"A manager enables or disables the allowlist.\"},\"SyndicateFeeAddressUpdated(address)\":{\"notice\":\"The owner updates the contract fee address.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Used to initialize the Syndicate contract.\"},\"getSyndicateFeeAddress()\":{\"notice\":\"getter function for syndicate fee address.\"},\"managerAllowAddresses(address,address[])\":{\"notice\":\"Used by a manager to add an array of member addresses to the allowlist and emit an event to allow for easy searching.This function is only relevant when the manager has turned the allowlist on (`SyndicateValues.allowlistEnabled == true`). If the allowlist is off, anyone can make a deposit to the Syndicate without the manager specifically allowing their address.\"},\"managerBlockAddresses(address,address[])\":{\"notice\":\"Used by a manager to remove a previously-allowed member address from the allowlistThis function only proceeds when the allowlist is enabled, as it is ineffective to maintain a blocklist of possible member addresses. A manager who wishes to reverse a deposit into their fund should instead use `managerRejectDepositForMembers()`.Blocking a member address that has previously been allowed does not reject or return their prior deposits. The deposit is still kept in the syndicate.\"},\"managerSetAllowlistEnabled(address,bool)\":{\"notice\":\"Used by a manager to turn the allowlist on or offThis setter can only be called when the Syndicate is open, as it only limits future deposits. To retroactively remove deposits that have been made by members who may not have been on the allowlist, a manager should use `managerRejectDepositForMember()`.\"},\"ownerRenounceOwnership()\":{\"notice\":\"Renounce ownership of the contract\"},\"ownerSetSyndicateFeeAddress(address)\":{\"notice\":\"set a new fee address for the contract function that can only be triggered by the contract owner.\"},\"ownerTransferOwnership(address)\":{\"notice\":\"Transfers ownership to the provided address.\"}},\"notice\":\"This contract enables the manager to enable/disable, add members to, and remove members from the allowlist. If the allowlist is enabled, then only the listed addresses will be allowed to deposit.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/mbuvi/syndicates/Syndicate/contracts/SyndicateClosedEndFundAllowlistLogicV0.sol\":\"SyndicateClosedEndFundAllowlistLogicV0\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mbuvi/syndicates/Syndicate/contracts/SyndicateClosedEndFundAllowlistLogicV0.sol\":{\"keccak256\":\"0x0507bf02cb083d3a599e5937005ffc5507e03f979fad0f2a9acd091de76d6605\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2f6093f056ec81c6f20ea16806033038a790ba1aab2e3b16b0488387f943c11a\",\"dweb:/ipfs/QmcXFKtwg97AGJPcnrcnEdKCSURznzspVMxLwwWJyfHjNU\"]},\"/Users/mbuvi/syndicates/Syndicate/contracts/SyndicateClosedEndFundLogic.sol\":{\"keccak256\":\"0x06dde5332e0d443a73001b69786311560e99ca29b7933f8088947aa7ffcb5932\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d5dcc45313c0dff326a3005695af9439a5705b4b5b860ef01a644aef05dca0d3\",\"dweb:/ipfs/QmRrQyxVt1w2ZYmT6ia8FVZwRx3jNyt5zW6rkxSwTTAvs2\"]},\"/Users/mbuvi/syndicates/Syndicate/contracts/SyndicateClosedEndFundStoreV0.sol\":{\"keccak256\":\"0xa7ebf28f0ca90e481270b67a10edc523dc2012c738bea840949bc7b0f0c7bbb7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b77807a5274516be1b447f0ac21e10decc0b6d832182b59751863fb9a5b8b29a\",\"dweb:/ipfs/Qmawzp3ZbUvAYf5g6Jtph4pCeyxECSpBvfLgTKDcEgHsnA\"]},\"/Users/mbuvi/syndicates/Syndicate/contracts/SyndicateOwnerLogic.sol\":{\"keccak256\":\"0xe8fddc6a8d97c463fe3f70685d1f2be02b7e09bee7059cc5e4f791a777822529\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://95e64762babce0034f2feab14e29c3a3c088a494b62fdb0e710bbd18759de6fa\",\"dweb:/ipfs/QmNLmg285J7RJTv98Twy37XQZtxy3NxHuN5zRsjZkQEuKU\"]},\"/Users/mbuvi/syndicates/Syndicate/contracts/interfaces/ISyndicateClosedEndFundAllowlistLogicV0.sol\":{\"keccak256\":\"0x2b2e7680f858227357c66837b757aab3cc7be25195e1b542330039657695ac34\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://50ce11113de3ece862852eaab2afb61c381cee7b1edb2095276f28e15ca481e5\",\"dweb:/ipfs/QmWTrgt9jRUbqQaPLNGevMz1DDnN1kwPFfDwZVae5oAu8G\"]},\"/Users/mbuvi/syndicates/Syndicate/contracts/interfaces/ISyndicateClosedEndFundStoreGettersV0.sol\":{\"keccak256\":\"0x58f9c6467b99eea3dd3ccb77f720560ed8df66385a05e4d83c6b837ed84b09ed\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://638d0f255bf3bb99238d9d69a6682fcef99445f005998c05bca97840050bccb7\",\"dweb:/ipfs/QmWRMYfxcXao8XxzxjwTt4M6UnzLN7Q39qUEZy3DkV52BS\"]},\"/Users/mbuvi/syndicates/Syndicate/contracts/interfaces/ISyndicateClosedEndFundStoreSettersV0.sol\":{\"keccak256\":\"0xf4009482f1acc92741694e11f4eddff419451c0feeeb5d6a716a0f7dc122cf62\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://55df7092c843893eee3e02d303a32b82d118061772c8afe04e4ed84fbf6bd1a6\",\"dweb:/ipfs/QmXAv6GBTVtPHN5ydu5ui1qHHF5ctKaz5DVT2CDtoidXrj\"]},\"/Users/mbuvi/syndicates/Syndicate/contracts/interfaces/ISyndicateClosedEndFundStoreV0.sol\":{\"keccak256\":\"0xd45734947d186d7cfa5a07c2d03e04d8ab4918a6d5131d28e490142ca69e0a63\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2de134b1bbdf45ecf5a20204b033488a5d95e42949f1be020f373d37739a5b46\",\"dweb:/ipfs/QmTHX5D9f5swJY3MRxUUZu17WMwYV9L1eZy4kqLUdKYhiH\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x1278c76b840063ff5e14a2d7c5707812c1eabc2342ed040bf862c2d7552102fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9989233808b8f475395f71ea757e277fa167cdac8a24d10f9784783defd313c\",\"dweb:/ipfs/Qmdg6rbPsShpnzvqKmPVuFk7eYU53oXTPxqUJXd9WLD4vg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x6080604052600280546001600160a01b0319167340db79f7f18c468c6552538b488c58b5e72bf4d917905534801561003657600080fd5b50604051610d87380380610d87833981016040819052610055916101ec565b6001600081815581546001600160a01b03191633908117909255604051849284928492829190600080516020610d67833981519152908290a350610098816100c2565b50600380546001600160a01b0319166001600160a01b03929092169190911790555061021f915050565b6001546001600160a01b031633146101215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b0381166101865760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610118565b6001546040516001600160a01b03808416921690600080516020610d6783398151915290600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b03811681146101e757600080fd5b919050565b600080604083850312156101ff57600080fd5b610208836101d0565b9150610216602084016101d0565b90509250929050565b610b398061022e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a09cca9311610071578063a09cca9314610110578063bd4edf0e14610123578063bfd9a7e114610136578063cad0a37314610149578063cfa498a31461015a578063f2fde38b1461017157600080fd5b806315b1a646146100ae578063715018a6146100c357806381abf408146100cb57806386afa44e146100d35780638da5cb5b146100e6575b600080fd5b6100c16100bc36600461098e565b610184565b005b6100c16102ce565b6100c161034b565b6100c16100e1366004610a16565b61037f565b6001546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100c161011e36600461094d565b610438565b6100c161013136600461098e565b61046e565b6100c161014436600461094d565b6105af565b6002546001600160a01b03166100f3565b61016361271081565b604051908152602001610107565b6100c161017f36600461094d565b610623565b8261018e8161070e565b83610198816107d9565b846101a28161088f565b60005b848110156102c5576003546001600160a01b031663010d8135888888858181106101d1576101d1610aca565b90506020020160208101906101e6919061094d565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260016044820152606401600060405180830381600087803b15801561023557600080fd5b505af1158015610249573d6000803e3d6000fd5b5050505085858281811061025f5761025f610aca565b9050602002016020810190610274919061094d565b6001600160a01b0316876001600160a01b03167f11db8dd6cdf978ae8ea4387d9f3d24b21d117d4b9669c370379462b939ad302160405160405180910390a3806102bd81610aa1565b9150506101a5565b50505050505050565b6001546001600160a01b031633146103015760405162461bcd60e51b81526004016102f890610a6c565b60405180910390fd5b6001546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600180546001600160a01b0319169055565b6001546001600160a01b031633146103755760405162461bcd60e51b81526004016102f890610a6c565b61037d6102ce565b565b816103898161070e565b82610393816107d9565b60035460405163b1e315bf60e01b81526001600160a01b03868116600483015285151560248301529091169063b1e315bf90604401600060405180830381600087803b1580156103e257600080fd5b505af11580156103f6573d6000803e3d6000fd5b505060405185151592506001600160a01b03871691507f8a9a34d3af8982b2b56ec3b1f1f8580f5d10d945bf203d1cb0f30aea8f2624fc90600090a350505050565b6001546001600160a01b031633146104625760405162461bcd60e51b81526004016102f890610a6c565b61046b81610623565b50565b826104788161070e565b83610482816107d9565b8461048c8161088f565b60005b848110156102c5576003546001600160a01b031663010d8135888888858181106104bb576104bb610aca565b90506020020160208101906104d0919061094d565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260006044820152606401600060405180830381600087803b15801561051f57600080fd5b505af1158015610533573d6000803e3d6000fd5b5050505085858281811061054957610549610aca565b905060200201602081019061055e919061094d565b6001600160a01b0316876001600160a01b03167ff6a9e0671826ecb6caed3f09102abc8d144bbb3fe5137ad92cdebaf1312989ef60405160405180910390a3806105a781610aa1565b91505061048f565b6001546001600160a01b031633146105d95760405162461bcd60e51b81526004016102f890610a6c565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fcf41d0875fade187fa408cd5e4f56e25cda2fae1cff91d42f08c1db396349a2d90600090a250565b6001546001600160a01b0316331461064d5760405162461bcd60e51b81526004016102f890610a6c565b6001600160a01b0381166106b25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102f8565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600354604051630e8aef6f60e41b81526001600160a01b0383811660048301529091169063e8aef6f09060240160206040518083038186803b15801561075357600080fd5b505afa158015610767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b9190610971565b6001600160a01b0316336001600160a01b03161461046b5760405162461bcd60e51b815260206004820152600b60248201526a29a2292fa727aa2fa6a3a960a91b60448201526064016102f8565b60035460405163172a8c1f60e31b81526001600160a01b0383811660048301529091169063b95460f89060240160206040518083038186803b15801561081e57600080fd5b505afa158015610832573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108569190610a4f565b61046b5760405162461bcd60e51b815260206004820152600a60248201526914d65397d0d313d4d15160b21b60448201526064016102f8565b6003546040516331dcbbdb60e21b81526001600160a01b0383811660048301529091169063c772ef6c9060240160206040518083038186803b1580156108d457600080fd5b505afa1580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c9190610a4f565b61046b5760405162461bcd60e51b815260206004820152601260248201527110531313d5d31254d517d11254d05093115160721b60448201526064016102f8565b60006020828403121561095f57600080fd5b813561096a81610ae0565b9392505050565b60006020828403121561098357600080fd5b815161096a81610ae0565b6000806000604084860312156109a357600080fd5b83356109ae81610ae0565b9250602084013567ffffffffffffffff808211156109cb57600080fd5b818601915086601f8301126109df57600080fd5b8135818111156109ee57600080fd5b8760208260051b8501011115610a0357600080fd5b6020830194508093505050509250925092565b60008060408385031215610a2957600080fd5b8235610a3481610ae0565b91506020830135610a4481610af5565b809150509250929050565b600060208284031215610a6157600080fd5b815161096a81610af5565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000600019821415610ac357634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461046b57600080fd5b801515811461046b57600080fdfea2646970667358221220861154b1318d357e834c7585e3710ebc0afff13c8c9d535ac2df46082f52538a64736f6c634300080600338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a09cca9311610071578063a09cca9314610110578063bd4edf0e14610123578063bfd9a7e114610136578063cad0a37314610149578063cfa498a31461015a578063f2fde38b1461017157600080fd5b806315b1a646146100ae578063715018a6146100c357806381abf408146100cb57806386afa44e146100d35780638da5cb5b146100e6575b600080fd5b6100c16100bc36600461098e565b610184565b005b6100c16102ce565b6100c161034b565b6100c16100e1366004610a16565b61037f565b6001546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100c161011e36600461094d565b610438565b6100c161013136600461098e565b61046e565b6100c161014436600461094d565b6105af565b6002546001600160a01b03166100f3565b61016361271081565b604051908152602001610107565b6100c161017f36600461094d565b610623565b8261018e8161070e565b83610198816107d9565b846101a28161088f565b60005b848110156102c5576003546001600160a01b031663010d8135888888858181106101d1576101d1610aca565b90506020020160208101906101e6919061094d565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260016044820152606401600060405180830381600087803b15801561023557600080fd5b505af1158015610249573d6000803e3d6000fd5b5050505085858281811061025f5761025f610aca565b9050602002016020810190610274919061094d565b6001600160a01b0316876001600160a01b03167f11db8dd6cdf978ae8ea4387d9f3d24b21d117d4b9669c370379462b939ad302160405160405180910390a3806102bd81610aa1565b9150506101a5565b50505050505050565b6001546001600160a01b031633146103015760405162461bcd60e51b81526004016102f890610a6c565b60405180910390fd5b6001546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600180546001600160a01b0319169055565b6001546001600160a01b031633146103755760405162461bcd60e51b81526004016102f890610a6c565b61037d6102ce565b565b816103898161070e565b82610393816107d9565b60035460405163b1e315bf60e01b81526001600160a01b03868116600483015285151560248301529091169063b1e315bf90604401600060405180830381600087803b1580156103e257600080fd5b505af11580156103f6573d6000803e3d6000fd5b505060405185151592506001600160a01b03871691507f8a9a34d3af8982b2b56ec3b1f1f8580f5d10d945bf203d1cb0f30aea8f2624fc90600090a350505050565b6001546001600160a01b031633146104625760405162461bcd60e51b81526004016102f890610a6c565b61046b81610623565b50565b826104788161070e565b83610482816107d9565b8461048c8161088f565b60005b848110156102c5576003546001600160a01b031663010d8135888888858181106104bb576104bb610aca565b90506020020160208101906104d0919061094d565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260006044820152606401600060405180830381600087803b15801561051f57600080fd5b505af1158015610533573d6000803e3d6000fd5b5050505085858281811061054957610549610aca565b905060200201602081019061055e919061094d565b6001600160a01b0316876001600160a01b03167ff6a9e0671826ecb6caed3f09102abc8d144bbb3fe5137ad92cdebaf1312989ef60405160405180910390a3806105a781610aa1565b91505061048f565b6001546001600160a01b031633146105d95760405162461bcd60e51b81526004016102f890610a6c565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fcf41d0875fade187fa408cd5e4f56e25cda2fae1cff91d42f08c1db396349a2d90600090a250565b6001546001600160a01b0316331461064d5760405162461bcd60e51b81526004016102f890610a6c565b6001600160a01b0381166106b25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102f8565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600354604051630e8aef6f60e41b81526001600160a01b0383811660048301529091169063e8aef6f09060240160206040518083038186803b15801561075357600080fd5b505afa158015610767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b9190610971565b6001600160a01b0316336001600160a01b03161461046b5760405162461bcd60e51b815260206004820152600b60248201526a29a2292fa727aa2fa6a3a960a91b60448201526064016102f8565b60035460405163172a8c1f60e31b81526001600160a01b0383811660048301529091169063b95460f89060240160206040518083038186803b15801561081e57600080fd5b505afa158015610832573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108569190610a4f565b61046b5760405162461bcd60e51b815260206004820152600a60248201526914d65397d0d313d4d15160b21b60448201526064016102f8565b6003546040516331dcbbdb60e21b81526001600160a01b0383811660048301529091169063c772ef6c9060240160206040518083038186803b1580156108d457600080fd5b505afa1580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c9190610a4f565b61046b5760405162461bcd60e51b815260206004820152601260248201527110531313d5d31254d517d11254d05093115160721b60448201526064016102f8565b60006020828403121561095f57600080fd5b813561096a81610ae0565b9392505050565b60006020828403121561098357600080fd5b815161096a81610ae0565b6000806000604084860312156109a357600080fd5b83356109ae81610ae0565b9250602084013567ffffffffffffffff808211156109cb57600080fd5b818601915086601f8301126109df57600080fd5b8135818111156109ee57600080fd5b8760208260051b8501011115610a0357600080fd5b6020830194508093505050509250925092565b60008060408385031215610a2957600080fd5b8235610a3481610ae0565b91506020830135610a4481610af5565b809150509250929050565b600060208284031215610a6157600080fd5b815161096a81610af5565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000600019821415610ac357634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461046b57600080fd5b801515811461046b57600080fdfea2646970667358221220861154b1318d357e834c7585e3710ebc0afff13c8c9d535ac2df46082f52538a64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1259:27",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:27",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:27"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:27",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:27",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:27"
                  },
                  "nodeType": "YulIf",
                  "src": "115:2:27"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:27",
                "type": ""
              }
            ],
            "src": "14:177:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:195:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "340:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "349:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "352:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "342:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "342:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "342:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "315:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "324:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "311:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "311:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "336:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "307:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "304:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "365:50:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "405:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "375:29:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:40:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "365:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "424:59:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "468:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "479:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "464:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "464:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "434:29:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:49:27"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "424:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "252:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "263:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "275:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "283:6:27",
                "type": ""
              }
            ],
            "src": "196:293:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "668:228:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "685:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "696:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "678:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "678:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "678:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "719:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "730:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "715:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "715:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "735:2:27",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "708:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "708:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "708:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "758:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "769:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "754:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "754:18:27"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "774:34:27",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "747:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "747:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "747:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "829:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "840:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "825:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "825:18:27"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "845:8:27",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "818:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "818:36:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "818:36:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "863:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "875:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "886:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "871:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "863:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "645:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "659:4:27",
                "type": ""
              }
            ],
            "src": "494:402:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1075:182:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1092:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1103:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1085:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1085:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1085:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1126:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1137:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1122:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1122:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1142:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1115:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1115:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1115:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1165:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1176:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1161:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:18:27"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1181:34:27",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1154:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1154:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1154:62:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1225:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1237:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1248:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1233:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1233:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1225:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1052:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1066:4:27",
                "type": ""
              }
            ],
            "src": "901:356:27"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5402:27",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:27",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:177:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "225:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "200:24:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "200:31:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "200:31:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "240:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "250:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "240:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:27",
                "type": ""
              }
            ],
            "src": "14:247:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "347:170:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "393:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "402:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "405:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "395:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "395:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "395:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "368:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "377:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "364:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "364:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "389:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "360:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "360:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "357:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "418:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "437:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "431:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "431:16:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "422:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "481:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "456:24:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "456:31:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "456:31:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "496:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "506:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "496:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "313:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "324:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "336:6:27",
                "type": ""
              }
            ],
            "src": "266:251:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "644:628:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "690:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "699:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "702:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "692:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "692:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "692:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "665:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "674:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "661:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "661:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "686:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "657:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "657:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "654:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "715:36:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "741:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "728:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "728:23:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "719:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "785:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "760:24:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "760:31:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "760:31:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "800:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "810:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "800:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "824:46:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "855:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "866:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "851:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "851:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "838:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "838:32:27"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "828:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "879:28:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "889:18:27",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "883:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "934:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "943:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "946:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "936:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "936:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "936:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "922:6:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "930:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "919:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "919:14:27"
                  },
                  "nodeType": "YulIf",
                  "src": "916:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "959:32:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "973:9:27"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "984:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "969:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "969:22:27"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "963:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1039:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1048:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1051:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1041:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1041:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1041:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1018:2:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1022:4:27",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1014:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1014:13:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1029:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1010:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1010:27:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1003:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1003:35:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1000:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1064:30:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1091:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1078:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1078:16:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1068:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1121:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1130:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1133:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1123:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1123:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1123:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1109:6:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1117:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1106:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1106:14:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1103:2:27"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1195:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1204:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1207:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1197:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1197:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1197:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1160:2:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1168:1:27",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1171:6:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1164:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1164:14:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1156:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1156:23:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1181:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1152:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1152:32:27"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1186:7:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1149:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1149:45:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1146:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1220:21:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1234:2:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1238:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1230:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1230:11:27"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1220:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1250:16:27",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1260:6:27"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1250:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "594:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "605:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "617:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "625:6:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "633:6:27",
                "type": ""
              }
            ],
            "src": "522:750:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1361:298:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1407:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1416:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1419:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1409:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1409:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1409:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1382:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1391:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1378:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1378:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1403:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1374:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1374:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1371:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1432:36:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1458:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1445:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1445:23:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1436:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1502:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1477:24:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1477:31:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1477:31:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1517:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1527:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1517:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1541:47:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1573:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1584:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1569:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1569:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1556:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1556:32:27"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1545:7:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1619:7:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1597:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1597:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1597:30:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1636:17:27",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1646:7:27"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1636:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1319:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1330:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1342:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1350:6:27",
                "type": ""
              }
            ],
            "src": "1277:382:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1742:167:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1788:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1797:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1800:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1790:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1790:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1790:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1763:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1772:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1759:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1759:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1784:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1755:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1755:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1752:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1813:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1832:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1826:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1826:16:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1817:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1873:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1851:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1851:28:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1851:28:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1888:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1898:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1888:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1708:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1719:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1731:6:27",
                "type": ""
              }
            ],
            "src": "1664:245:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2015:102:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2025:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2037:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2048:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2033:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2033:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2025:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2067:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2082:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2098:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2103:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2094:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2094:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2107:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2090:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2090:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2078:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2078:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2060:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2060:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2060:51:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1984:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1995:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2006:4:27",
                "type": ""
              }
            ],
            "src": "1914:203:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2273:234:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2283:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2295:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2306:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2291:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2291:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2283:4:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2318:29:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2336:3:27",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2341:1:27",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2332:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2332:11:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2345:1:27",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2328:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2328:19:27"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2322:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2363:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2378:6:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2386:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2374:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2374:15:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2356:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2356:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2356:34:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2410:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2421:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2406:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2406:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2430:6:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2438:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2426:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2426:15:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2399:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2399:43:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2399:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2462:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2473:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2458:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2458:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "2492:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2485:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2485:14:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2478:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2478:22:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2451:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2451:50:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2451:50:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2226:9:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2237:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2245:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2253:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2264:4:27",
                "type": ""
              }
            ],
            "src": "2122:385:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2635:161:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2645:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2657:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2668:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2653:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2653:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2645:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2687:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2702:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2718:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2723:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2714:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2714:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2727:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2710:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2710:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2698:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2698:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2680:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2680:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2680:51:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2751:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2762:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2747:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2747:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "2781:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2774:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2774:14:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2767:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2767:22:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2740:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:50:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2740:50:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2596:9:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2607:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2615:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2626:4:27",
                "type": ""
              }
            ],
            "src": "2512:284:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2975:228:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2992:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3003:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2985:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2985:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2985:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3026:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3037:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3022:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3022:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3042:2:27",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3015:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3015:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3015:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3065:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3076:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3061:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3061:18:27"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3081:34:27",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3054:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3054:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3054:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3136:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3147:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3132:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3132:18:27"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3152:8:27",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3125:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3125:36:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3125:36:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3170:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3182:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3193:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3178:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3178:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3170:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2952:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2966:4:27",
                "type": ""
              }
            ],
            "src": "2801:402:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3382:168:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3399:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3410:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3392:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3392:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3433:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3444:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3429:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3429:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3449:2:27",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3422:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3422:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3422:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3472:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3483:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3468:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3468:18:27"
                      },
                      {
                        "hexValue": "414c4c4f574c4953545f44495341424c4544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3488:20:27",
                        "type": "",
                        "value": "ALLOWLIST_DISABLED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3461:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3461:48:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3461:48:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3518:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3530:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3541:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3526:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3526:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3518:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_62486d856c8e3452da8742fc2762152ae9a78de8b6e40df1a25d40ba235e1156__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3359:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3373:4:27",
                "type": ""
              }
            ],
            "src": "3208:342:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3729:160:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3746:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3757:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3739:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3739:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3739:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3780:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3791:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3776:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3776:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3796:2:27",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3769:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3769:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3769:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3819:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3830:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3815:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3815:18:27"
                      },
                      {
                        "hexValue": "53594e5f434c4f534544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3835:12:27",
                        "type": "",
                        "value": "SYN_CLOSED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3808:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3808:40:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3808:40:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3857:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3869:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3880:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3865:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3865:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3857:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8be6ba5a1f6aa381cde631c8d4fd96aca56942f185b92d352f804830130f97f3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3706:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3720:4:27",
                "type": ""
              }
            ],
            "src": "3555:334:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4068:182:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4085:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4096:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4078:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4078:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4078:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4119:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4130:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4115:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4115:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4135:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4108:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4108:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4108:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4158:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4169:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4154:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4154:18:27"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4174:34:27",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4147:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4147:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4147:62:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4218:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4230:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4241:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4226:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4226:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4218:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4045:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4059:4:27",
                "type": ""
              }
            ],
            "src": "3894:356:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4429:161:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4446:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4457:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4439:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4439:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4439:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4480:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4491:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4476:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4476:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4496:2:27",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4469:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4469:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4469:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4519:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4530:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4515:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4515:18:27"
                      },
                      {
                        "hexValue": "5344525f4e4f545f4d4752",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4535:13:27",
                        "type": "",
                        "value": "SDR_NOT_MGR"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4508:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4508:41:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4508:41:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4558:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4570:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4581:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4566:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4566:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4558:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a98a926cf857c76027b816d5f72be49cea10b94f7af7f46d347c7adb5a781459__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4406:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4420:4:27",
                "type": ""
              }
            ],
            "src": "4255:335:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4696:76:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4706:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4718:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4729:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4714:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4714:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4706:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4748:9:27"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4759:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4741:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4741:25:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4741:25:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4665:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4676:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4687:4:27",
                "type": ""
              }
            ],
            "src": "4595:177:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4824:185:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4863:111:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4884:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4891:3:27",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4896:10:27",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4887:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4887:20:27"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4877:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4877:31:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4877:31:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4928:1:27",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4931:4:27",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4921:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4921:15:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4921:15:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4956:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4959:4:27",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4949:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4949:15:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4949:15:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4840:5:27"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4851:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4847:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4847:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "4837:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4837:17:27"
                  },
                  "nodeType": "YulIf",
                  "src": "4834:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4983:20:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4994:5:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5001:1:27",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4990:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4990:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "4983:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4806:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "4816:3:27",
                "type": ""
              }
            ],
            "src": "4777:232:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5046:95:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5063:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5070:3:27",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5075:10:27",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5066:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5066:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5056:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5056:31:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5056:31:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5103:1:27",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5106:4:27",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5096:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5096:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5096:15:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5127:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5130:4:27",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5120:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5120:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5120:15:27"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "5014:127:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5191:86:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5255:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5264:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5267:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5257:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5257:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5257:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5214:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5225:5:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5240:3:27",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5245:1:27",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5236:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5236:11:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5249:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5232:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5232:19:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5221:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5221:31:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5211:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5211:42:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5204:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5204:50:27"
                  },
                  "nodeType": "YulIf",
                  "src": "5201:2:27"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5180:5:27",
                "type": ""
              }
            ],
            "src": "5146:131:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5324:76:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5378:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5387:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5390:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5380:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5380:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5380:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5347:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5368:5:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5361:6:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5361:13:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5354:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5354:21:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5344:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5344:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5337:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5337:40:27"
                  },
                  "nodeType": "YulIf",
                  "src": "5334:2:27"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5313:5:27",
                "type": ""
              }
            ],
            "src": "5282:118:27"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_62486d856c8e3452da8742fc2762152ae9a78de8b6e40df1a25d40ba235e1156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"ALLOWLIST_DISABLED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8be6ba5a1f6aa381cde631c8d4fd96aca56942f185b92d352f804830130f97f3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"SYN_CLOSED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a98a926cf857c76027b816d5f72be49cea10b94f7af7f46d347c7adb5a781459__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"SDR_NOT_MGR\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "421:5859:1:-:0;;;541:88:10;;;-1:-1:-1;;;;;;541:88:10;587:42;541:88;;;696:112:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1637:1:22;1743:7;:22;;;909:18:21;;-1:-1:-1;;;;;;909:18:21;665:10:26;909:18:21;;;;;;942:43;;781:5:1;;788:12;;781:5;;665:10:26;;1743:7:22;-1:-1:-1;;;;;;;;;;;942:43:21;1743:7:22;;942:43:21;-1:-1:-1;1174:24:10::1;1192:5:::0;1174:17:::1;:24::i;:::-;-1:-1:-1::0;648:5:6::2;:51:::0;;-1:-1:-1;;;;;;648:51:6::2;-1:-1:-1::0;;;;;648:51:6;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;421:5859:1;;-1:-1:-1;;421:5859:1;1994:240:21;1140:6;;-1:-1:-1;;;;;1140:6:21;665:10:26;1280:23:21;1272:68;;;;-1:-1:-1;;;1272:68:21;;1103:2:27;1272:68:21;;;1085:21:27;;;1122:18;;;1115:30;1181:34;1161:18;;;1154:62;1233:18;;1272:68:21;;;;;;;;;-1:-1:-1;;;;;2082:22:21;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:21;;696:2:27;2074:73:21::1;::::0;::::1;678:21:27::0;735:2;715:18;;;708:30;774:34;754:18;;;747:62;-1:-1:-1;;;825:18:27;;;818:36;871:19;;2074:73:21::1;668:228:27::0;2074:73:21::1;2183:6;::::0;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:21;;::::1;::::0;2183:6:::1;::::0;-1:-1:-1;;;;;;;;;;;2162:38:21;2183:6:::1;::::0;2162:38:::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:21::1;-1:-1:-1::0;;;;;2210:17:21;;;::::1;::::0;;;::::1;::::0;;1994:240::o;14:177:27:-;93:13;;-1:-1:-1;;;;;135:31:27;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:2;;;352:1;349;342:12;304:2;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;294:195;;;;;:::o;1075:182::-;421:5859:1;;;;;;",
  "deployedSourceMap": "421:5859:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4301:725;;;;;;:::i;:::-;;:::i;:::-;;1700:145:21;;;:::i;2519:93:10:-;;;:::i;2808:406:1:-;;;;;;:::i;:::-;;:::i;1068:85:21:-;1140:6;;-1:-1:-1;;;;;1140:6:21;1068:85;;;-1:-1:-1;;;;;2078:32:27;;;2060:51;;2048:2;2033:18;1068:85:21;;;;;;;;2351:111:10;;;;;;:::i;:::-;;:::i;5778:500:1:-;;;;;;:::i;:::-;;:::i;2058:177:10:-;;;;;;:::i;:::-;;:::i;1678:107::-;1759:19;;-1:-1:-1;;;;;1759:19:10;1678:107;;314:56;;365:5;314:56;;;;;4741:25:27;;;4729:2;4714:18;314:56:10;4696:76:27;1994:240:21;;;;;;:::i;:::-;;:::i;4301:725:1:-;4468:16;945:28:6;956:16;945:10;:28::i;:::-;4503:16:1::1;2132:25:6;2140:16;2132:7;:25::i;:::-;4550:16:1::2;3125:37:6;3145:16;3125:19;:37::i;:::-;4670:9:1::3;4665:355;4685:26:::0;;::::3;4665:355;;;4732:5;::::0;-1:-1:-1;;;;;4732:5:1::3;:18;4751:16:::0;4769:15;;4785:1;4769:18;;::::3;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4732:62;::::0;-1:-1:-1;;;;;;4732:62:1::3;::::0;;;;;;-1:-1:-1;;;;;2374:15:27;;;4732:62:1::3;::::0;::::3;2356:34:27::0;2426:15;;2406:18;;;2399:43;4789:4:1::3;2458:18:27::0;;;2451:50;2291:18;;4732:62:1::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;4990:15;;5006:1;4990:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4957:52:1::3;4972:16;-1:-1:-1::0;;;;;4957:52:1::3;;;;;;;;;;;4713:3:::0;::::3;::::0;::::3;:::i;:::-;;;;4665:355;;;;2167:1:6::2;983::::1;4301:725:1::0;;;;:::o;1700:145:21:-;1140:6;;-1:-1:-1;;;;;1140:6:21;665:10:26;1280:23:21;1272:68;;;;-1:-1:-1;;;1272:68:21;;;;;;;:::i;:::-;;;;;;;;;1790:6:::1;::::0;1769:40:::1;::::0;1806:1:::1;::::0;-1:-1:-1;;;;;1790:6:21::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1819:6;:19:::0;;-1:-1:-1;;;;;;1819:19:21::1;::::0;;1700:145::o;2519:93:10:-;1140:6:21;;-1:-1:-1;;;;;1140:6:21;665:10:26;1280:23:21;1272:68;;;;-1:-1:-1;;;1272:68:21;;;;;;;:::i;:::-;2580:25:10::1;:23;:25::i;:::-;2519:93::o:0;2808:406:1:-;2943:16;945:28:6;956:16;945:10;:28::i;:::-;2970:16:1::1;2132:25:6;2140:16;2132:7;:25::i;:::-;2998:5:1::2;::::0;:61:::2;::::0;-1:-1:-1;;;2998:61:1;;-1:-1:-1;;;;;2698:32:27;;;2998:61:1::2;::::0;::::2;2680:51:27::0;2774:14;;2767:22;2747:18;;;2740:50;2998:5:1;;::::2;::::0;:25:::2;::::0;2653:18:27;;2998:61:1::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;3148:59:1::2;::::0;;::::2;;::::0;-1:-1:-1;;;;;;3148:59:1;::::2;::::0;-1:-1:-1;3148:59:1::2;::::0;;;::::2;983:1:6::1;2808:406:1::0;;;:::o;2351:111:10:-;1140:6:21;;-1:-1:-1;;;;;1140:6:21;665:10:26;1280:23:21;1272:68;;;;-1:-1:-1;;;1272:68:21;;;;;;;:::i;:::-;2428:27:10::1;2446:8;2428:17;:27::i;:::-;2351:111:::0;:::o;5778:500:1:-;5945:16;945:28:6;956:16;945:10;:28::i;:::-;5980:16:1::1;2132:25:6;2140:16;2132:7;:25::i;:::-;6027:16:1::2;3125:37:6;3145:16;3125:19;:37::i;:::-;6064:9:1::3;6059:213;6079:26:::0;;::::3;6059:213;;;6126:5;::::0;-1:-1:-1;;;;;6126:5:1::3;:18;6145:16:::0;6163:15;;6179:1;6163:18;;::::3;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6126:63;::::0;-1:-1:-1;;;;;;6126:63:1::3;::::0;;;;;;-1:-1:-1;;;;;2374:15:27;;;6126:63:1::3;::::0;::::3;2356:34:27::0;2426:15;;2406:18;;;2399:43;6183:5:1::3;2458:18:27::0;;;2451:50;2291:18;;6126:63:1::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;6242:15;;6258:1;6242:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6209:52:1::3;6224:16;-1:-1:-1::0;;;;;6209:52:1::3;;;;;;;;;;;6107:3:::0;::::3;::::0;::::3;:::i;:::-;;;;6059:213;;2058:177:10::0;1140:6:21;;-1:-1:-1;;;;;1140:6:21;665:10:26;1280:23:21;1272:68;;;;-1:-1:-1;;;1272:68:21;;;;;;;:::i;:::-;2142:19:10::1;:32:::0;;-1:-1:-1;;;;;;2142:32:10::1;-1:-1:-1::0;;;;;2142:32:10;::::1;::::0;;::::1;::::0;;;2190:38:::1;::::0;::::1;::::0;-1:-1:-1;;2190:38:10::1;2058:177:::0;:::o;1994:240:21:-;1140:6;;-1:-1:-1;;;;;1140:6:21;665:10:26;1280:23:21;1272:68;;;;-1:-1:-1;;;1272:68:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:21;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:21;;3003:2:27;2074:73:21::1;::::0;::::1;2985:21:27::0;3042:2;3022:18;;;3015:30;3081:34;3061:18;;;3054:62;-1:-1:-1;;;3132:18:27;;;3125:36;3178:19;;2074:73:21::1;2975:228:27::0;2074:73:21::1;2183:6;::::0;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:21;;::::1;::::0;2183:6:::1;::::0;2162:38:::1;::::0;2183:6:::1;::::0;2162:38:::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:21::1;-1:-1:-1::0;;;;;2210:17:21;;;::::1;::::0;;;::::1;::::0;;1994:240::o;997:187:6:-;1102:5;;:38;;-1:-1:-1;;;1102:38:6;;-1:-1:-1;;;;;2078:32:27;;;1102:38:6;;;2060:51:27;1102:5:6;;;;:20;;2033:18:27;;1102:38:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1088:52:6;:10;-1:-1:-1;;;;;1088:52:6;;1067:110;;;;-1:-1:-1;;;1067:110:6;;4457:2:27;1067:110:6;;;4439:21:27;4496:2;4476:18;;;4469:30;-1:-1:-1;;;4515:18:27;;;4508:41;4566:18;;1067:110:6;4429:161:27;2181:125:6;2256:5;;:28;;-1:-1:-1;;;2256:28:6;;-1:-1:-1;;;;;2078:32:27;;;2256:28:6;;;2060:51:27;2256:5:6;;;;:10;;2033:18:27;;2256:28:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2248:51;;;;-1:-1:-1;;;2248:51:6;;3757:2:27;2248:51:6;;;3739:21:27;3796:2;3776:18;;;3769:30;-1:-1:-1;;;3815:18:27;;;3808:40;3865:18;;2248:51:6;3729:160:27;3186:157:6;3273:5;;:40;;-1:-1:-1;;;3273:40:6;;-1:-1:-1;;;;;2078:32:27;;;3273:40:6;;;2060:51:27;3273:5:6;;;;:22;;2033:18:27;;3273:40:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3265:71;;;;-1:-1:-1;;;3265:71:6;;3410:2:27;3265:71:6;;;3392:21:27;3449:2;3429:18;;;3422:30;-1:-1:-1;;;3468:18:27;;;3461:48;3526:18;;3265:71:6;3382:168:27;14:247;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;181:9;168:23;200:31;225:5;200:31;:::i;:::-;250:5;84:177;-1:-1:-1;;;84:177:27:o;266:251::-;336:6;389:2;377:9;368:7;364:23;360:32;357:2;;;405:1;402;395:12;357:2;437:9;431:16;456:31;481:5;456:31;:::i;522:750::-;617:6;625;633;686:2;674:9;665:7;661:23;657:32;654:2;;;702:1;699;692:12;654:2;741:9;728:23;760:31;785:5;760:31;:::i;:::-;810:5;-1:-1:-1;866:2:27;851:18;;838:32;889:18;919:14;;;916:2;;;946:1;943;936:12;916:2;984:6;973:9;969:22;959:32;;1029:7;1022:4;1018:2;1014:13;1010:27;1000:2;;1051:1;1048;1041:12;1000:2;1091;1078:16;1117:2;1109:6;1106:14;1103:2;;;1133:1;1130;1123:12;1103:2;1186:7;1181:2;1171:6;1168:1;1164:14;1160:2;1156:23;1152:32;1149:45;1146:2;;;1207:1;1204;1197:12;1146:2;1238;1234;1230:11;1220:21;;1260:6;1250:16;;;;;644:628;;;;;:::o;1277:382::-;1342:6;1350;1403:2;1391:9;1382:7;1378:23;1374:32;1371:2;;;1419:1;1416;1409:12;1371:2;1458:9;1445:23;1477:31;1502:5;1477:31;:::i;:::-;1527:5;-1:-1:-1;1584:2:27;1569:18;;1556:32;1597:30;1556:32;1597:30;:::i;:::-;1646:7;1636:17;;;1361:298;;;;;:::o;1664:245::-;1731:6;1784:2;1772:9;1763:7;1759:23;1755:32;1752:2;;;1800:1;1797;1790:12;1752:2;1832:9;1826:16;1851:28;1873:5;1851:28;:::i;3894:356::-;4096:2;4078:21;;;4115:18;;;4108:30;4174:34;4169:2;4154:18;;4147:62;4241:2;4226:18;;4068:182::o;4777:232::-;4816:3;-1:-1:-1;;4837:17:27;;4834:2;;;4896:10;4891:3;4887:20;4884:1;4877:31;4931:4;4928:1;4921:15;4959:4;4956:1;4949:15;4834:2;-1:-1:-1;5001:1:27;4990:13;;4824:185::o;5014:127::-;5075:10;5070:3;5066:20;5063:1;5056:31;5106:4;5103:1;5096:15;5130:4;5127:1;5120:15;5146:131;-1:-1:-1;;;;;5221:31:27;;5211:42;;5201:2;;5267:1;5264;5257:12;5282:118;5368:5;5361:13;5354:21;5347:5;5344:32;5334:2;;5390:1;5387;5380:12",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\nimport \"./SyndicateClosedEndFundLogic.sol\";\nimport \"./interfaces/ISyndicateClosedEndFundAllowlistLogicV0.sol\";\n\n/// @author Syndicate Inc.\n/// @notice This contract enables the manager to enable/disable, add members\n/// to, and remove members from the allowlist. If the allowlist is enabled,\n/// then only the listed addresses will be allowed to deposit.\n\ncontract SyndicateClosedEndFundAllowlistLogicV0 is\n    ISyndicateClosedEndFundAllowlistLogicV0,\n    SyndicateClosedEndFundLogic\n{\n    // Storage------------------------------------------------------------------\n\n    /// @notice Used to initialize the Syndicate contract.\n    constructor(address owner, address storeAddress)\n        SyndicateClosedEndFundLogic(owner, storeAddress)\n    {}\n\n    // Events-------------------------------------------------------------------\n\n    /// @notice A manager enables or disables the allowlist.\n    /// @dev These events can be used to notify prospective members off-chain\n    /// whether membership is restricted or not.\n    event AllowlistEnabledUpdated(\n        address indexed syndicateAddress,\n        bool indexed allowlistEnabled\n    );\n\n    /// @notice A manager adds a member's wallet address to the allowlist.\n    /// @dev These events can be used to notify a member off-chain that their\n    /// address is now allowed\n    /// @dev The timestamp is not critical here and in the below events, so it\n    /// is not included to save on gas costs. When a timestamp is necessary, it\n    /// can be pulled by evaluating the block that an event was contained in\n    /// (since the timestamp is just the block.timestamp)\n    event AddressAllowed(\n        address indexed syndicateAddress,\n        address indexed memberAddress\n    );\n\n    /// @notice A manager removes a member's wallet address from the allowlist.\n    /// @dev These events can be used to notify a member off-chain that their\n    /// address is now blocked (e.g. removed from the allowlist)\n    event AddressBlocked(\n        address indexed syndicateAddress,\n        address indexed memberAddress\n    );\n\n    // Functions----------------------------------------------------------------\n\n    /// @notice Used by a manager to turn the allowlist on or off\n    /// @param syndicateAddress The address of the Syndicate\n    /// @param allowlistEnabled True if the Syndicate ONLY accepts deposits\n    /// from allowed addresses. False if any (accredited) member can make a\n    /// deposit.\n    /// @notice This setter can only be called when the Syndicate is open, as\n    /// it only limits future deposits. To retroactively remove deposits that\n    /// have been made by members who may not have been on the allowlist, a\n    /// manager should use `managerRejectDepositForMember()`.\n    function managerSetAllowlistEnabled(\n        address syndicateAddress,\n        bool allowlistEnabled\n    ) public override onlyManager(syndicateAddress) onlyOpen(syndicateAddress) {\n        store.setAllowlistEnabled(syndicateAddress, allowlistEnabled);\n        // Emit an event when the manager modifies the allowlist settings\n        emit AllowlistEnabledUpdated(syndicateAddress, allowlistEnabled);\n    }\n\n    /// @notice Used by a manager to add an array of member addresses to the\n    /// allowlist and emit an event to allow for easy searching.\n    /// @param syndicateAddress The address of the Syndicate to accept the\n    /// allowedAdresses\n    /// @param memberAddresses An array of addresses to be allowed by the\n    /// Syndicate\n    /// @notice This function is only relevant when the manager has turned the\n    /// allowlist on (`SyndicateValues.allowlistEnabled == true`). If the\n    /// allowlist is off, anyone can make a deposit to the Syndicate without the\n    /// manager specifically allowing their address.\n    /// @dev Allowing a single address costs 31527 in gas without an array and\n    /// 32445 in gas with an array. This is a difference in cost of $0.17 at\n    /// current gas prices, which is a worthwhile trade off considering that (a)\n    /// allowing only one address will be less common than allowing multiple\n    /// addresses and (b) having two different allowAddress functions poses a\n    /// security risk if we forget to reconcile changes between them\n    function managerAllowAddresses(\n        address syndicateAddress,\n        address[] calldata memberAddresses\n    )\n        public\n        override\n        onlyManager(syndicateAddress)\n        onlyOpen(syndicateAddress)\n        onlyAllowlistEnabled(syndicateAddress)\n    {\n        // Loop through all memberAddresses and change status to True for allowed.\n        for (uint256 i = 0; i < memberAddresses.length; i++) {\n            store.setAllowlist(syndicateAddress, memberAddresses[i], true);\n            // Emit an event that a member can listen to so that they can know\n            // when their address has been added to an allowlist\n            emit AddressAllowed(syndicateAddress, memberAddresses[i]);\n        }\n    }\n\n    /// @notice Used by a manager to remove a previously-allowed member address\n    /// from the allowlist\n    /// @param syndicateAddress The address of the Syndicate that contains the\n    /// allowlist\n    /// @param memberAddresses The array of member addresses to remove.\n    /// @notice This function only proceeds when the allowlist is enabled, as\n    /// it is ineffective to maintain a blocklist of possible member addresses.\n    /// A manager who wishes to reverse a deposit into their fund should\n    /// instead use `managerRejectDepositForMembers()`.\n    /// @notice Blocking a member address that has previously been allowed does\n    /// not reject or return their prior deposits. The deposit is still kept\n    /// in the syndicate.\n    function managerBlockAddresses(\n        address syndicateAddress,\n        address[] calldata memberAddresses\n    )\n        public\n        override\n        onlyManager(syndicateAddress)\n        onlyOpen(syndicateAddress)\n        onlyAllowlistEnabled(syndicateAddress)\n    {\n        for (uint256 i = 0; i < memberAddresses.length; i++) {\n            store.setAllowlist(syndicateAddress, memberAddresses[i], false);\n\n            emit AddressBlocked(syndicateAddress, memberAddresses[i]);\n        }\n    }\n}\n",
  "sourcePath": "/Users/mbuvi/syndicates/Syndicate/contracts/SyndicateClosedEndFundAllowlistLogicV0.sol",
  "ast": {
    "absolutePath": "/Users/mbuvi/syndicates/Syndicate/contracts/SyndicateClosedEndFundAllowlistLogicV0.sol",
    "exportedSymbols": {
      "Context": [
        7765
      ],
      "ISyndicateClosedEndFundAllowlistLogicV0": [
        4890
      ],
      "ISyndicateClosedEndFundStoreGettersV0": [
        5511
      ],
      "ISyndicateClosedEndFundStoreSettersV0": [
        5733
      ],
      "ISyndicateClosedEndFundStoreV0": [
        5742
      ],
      "Ownable": [
        7104
      ],
      "ReentrancyGuard": [
        7144
      ],
      "SyndicateClosedEndFundAllowlistLogicV0": [
        251
      ],
      "SyndicateClosedEndFundLogic": [
        2705
      ],
      "SyndicateClosedEndFundStoreV0": [
        4592
      ],
      "SyndicateOwnerLogic": [
        4864
      ]
    },
    "id": 252,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 81,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:1"
      },
      {
        "absolutePath": "/Users/mbuvi/syndicates/Syndicate/contracts/SyndicateClosedEndFundLogic.sol",
        "file": "./SyndicateClosedEndFundLogic.sol",
        "id": 82,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 252,
        "sourceUnit": 2706,
        "src": "65:43:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mbuvi/syndicates/Syndicate/contracts/interfaces/ISyndicateClosedEndFundAllowlistLogicV0.sol",
        "file": "./interfaces/ISyndicateClosedEndFundAllowlistLogicV0.sol",
        "id": 83,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 252,
        "sourceUnit": 4891,
        "src": "109:66:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 85,
              "name": "ISyndicateClosedEndFundAllowlistLogicV0",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4890,
              "src": "476:39:1"
            },
            "id": 86,
            "nodeType": "InheritanceSpecifier",
            "src": "476:39:1"
          },
          {
            "baseName": {
              "id": 87,
              "name": "SyndicateClosedEndFundLogic",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2705,
              "src": "521:27:1"
            },
            "id": 88,
            "nodeType": "InheritanceSpecifier",
            "src": "521:27:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 84,
          "nodeType": "StructuredDocumentation",
          "src": "177:243:1",
          "text": "@author Syndicate Inc.\n @notice This contract enables the manager to enable/disable, add members\n to, and remove members from the allowlist. If the allowlist is enabled,\n then only the listed addresses will be allowed to deposit."
        },
        "fullyImplemented": true,
        "id": 251,
        "linearizedBaseContracts": [
          251,
          2705,
          4864,
          7104,
          7765,
          7144,
          4890
        ],
        "name": "SyndicateClosedEndFundAllowlistLogicV0",
        "nameLocation": "430:38:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "806:2:1",
              "statements": []
            },
            "documentation": {
              "id": 89,
              "nodeType": "StructuredDocumentation",
              "src": "637:54:1",
              "text": "@notice Used to initialize the Syndicate contract."
            },
            "id": 101,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 96,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91,
                    "src": "781:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 97,
                    "name": "storeAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 93,
                    "src": "788:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 98,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 95,
                  "name": "SyndicateClosedEndFundLogic",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2705,
                  "src": "753:27:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "753:48:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "716:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "708:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "storeAddress",
                  "nameLocation": "731:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "723:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "707:37:1"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "806:0:1"
            },
            "scope": 251,
            "src": "696:112:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 102,
              "nodeType": "StructuredDocumentation",
              "src": "896:183:1",
              "text": "@notice A manager enables or disables the allowlist.\n @dev These events can be used to notify prospective members off-chain\n whether membership is restricted or not."
            },
            "id": 108,
            "name": "AllowlistEnabledUpdated",
            "nameLocation": "1090:23:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "syndicateAddress",
                  "nameLocation": "1139:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "1123:32:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1123:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "allowlistEnabled",
                  "nameLocation": "1178:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "1165:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1113:87:1"
            },
            "src": "1084:117:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 109,
              "nodeType": "StructuredDocumentation",
              "src": "1207:473:1",
              "text": "@notice A manager adds a member's wallet address to the allowlist.\n @dev These events can be used to notify a member off-chain that their\n address is now allowed\n @dev The timestamp is not critical here and in the below events, so it\n is not included to save on gas costs. When a timestamp is necessary, it\n can be pulled by evaluating the block that an event was contained in\n (since the timestamp is just the block.timestamp)"
            },
            "id": 115,
            "name": "AddressAllowed",
            "nameLocation": "1691:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "syndicateAddress",
                  "nameLocation": "1731:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1715:32:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "memberAddress",
                  "nameLocation": "1773:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1757:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1757:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1705:87:1"
            },
            "src": "1685:108:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 116,
              "nodeType": "StructuredDocumentation",
              "src": "1799:218:1",
              "text": "@notice A manager removes a member's wallet address from the allowlist.\n @dev These events can be used to notify a member off-chain that their\n address is now blocked (e.g. removed from the allowlist)"
            },
            "id": 122,
            "name": "AddressBlocked",
            "nameLocation": "2028:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "syndicateAddress",
                  "nameLocation": "2068:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "2052:32:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2052:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "memberAddress",
                  "nameLocation": "2110:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "2094:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2094:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2042:87:1"
            },
            "src": "2022:108:1"
          },
          {
            "baseFunctions": [
              4873
            ],
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "2988:226:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 140,
                        "name": "syndicateAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "3024:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 141,
                        "name": "allowlistEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "3042:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 137,
                        "name": "store",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2389,
                        "src": "2998:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SyndicateClosedEndFundStoreV0_$4592",
                          "typeString": "contract SyndicateClosedEndFundStoreV0"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setAllowlistEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4515,
                      "src": "2998:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2998:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:61:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 145,
                        "name": "syndicateAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "3172:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 146,
                        "name": "allowlistEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "3190:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 144,
                      "name": "AllowlistEnabledUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "3148:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3148:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 148,
                  "nodeType": "EmitStatement",
                  "src": "3143:64:1"
                }
              ]
            },
            "documentation": {
              "id": 123,
              "nodeType": "StructuredDocumentation",
              "src": "2218:585:1",
              "text": "@notice Used by a manager to turn the allowlist on or off\n @param syndicateAddress The address of the Syndicate\n @param allowlistEnabled True if the Syndicate ONLY accepts deposits\n from allowed addresses. False if any (accredited) member can make a\n deposit.\n @notice This setter can only be called when the Syndicate is open, as\n it only limits future deposits. To retroactively remove deposits that\n have been made by members who may not have been on the allowlist, a\n manager should use `managerRejectDepositForMember()`."
            },
            "functionSelector": "86afa44e",
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 131,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 125,
                    "src": "2943:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 130,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2419,
                  "src": "2931:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2931:29:1"
              },
              {
                "arguments": [
                  {
                    "id": 134,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 125,
                    "src": "2970:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 135,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 133,
                  "name": "onlyOpen",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2503,
                  "src": "2961:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2961:26:1"
              }
            ],
            "name": "managerSetAllowlistEnabled",
            "nameLocation": "2817:26:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 129,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2922:8:1"
            },
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "syndicateAddress",
                  "nameLocation": "2861:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "2853:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2853:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "allowlistEnabled",
                  "nameLocation": "2892:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "2887:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2887:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2843:71:1"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2988:0:1"
            },
            "scope": 251,
            "src": "2808:406:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4881
            ],
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "4572:454:1",
              "statements": [
                {
                  "body": {
                    "id": 197,
                    "nodeType": "Block",
                    "src": "4718:302:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 183,
                              "name": "syndicateAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153,
                              "src": "4751:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 184,
                                "name": "memberAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 156,
                                "src": "4769:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 186,
                              "indexExpression": {
                                "id": 185,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 170,
                                "src": "4785:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4769:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4789:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 180,
                              "name": "store",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2389,
                              "src": "4732:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SyndicateClosedEndFundStoreV0_$4592",
                                "typeString": "contract SyndicateClosedEndFundStoreV0"
                              }
                            },
                            "id": 182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setAllowlist",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4536,
                            "src": "4732:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,bool) external"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4732:62:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 189,
                        "nodeType": "ExpressionStatement",
                        "src": "4732:62:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 191,
                              "name": "syndicateAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153,
                              "src": "4972:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 192,
                                "name": "memberAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 156,
                                "src": "4990:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 194,
                              "indexExpression": {
                                "id": 193,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 170,
                                "src": "5006:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4990:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 190,
                            "name": "AddressAllowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "4957:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4957:52:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 196,
                        "nodeType": "EmitStatement",
                        "src": "4952:57:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 173,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "4685:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 174,
                        "name": "memberAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "4689:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4689:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4685:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 198,
                  "initializationExpression": {
                    "assignments": [
                      170
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 170,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4678:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "4670:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 169,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4670:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 172,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4682:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4670:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4713:3:1",
                      "subExpression": {
                        "id": 177,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "4713:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 179,
                    "nodeType": "ExpressionStatement",
                    "src": "4713:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "4665:355:1"
                }
              ]
            },
            "documentation": {
              "id": 151,
              "nodeType": "StructuredDocumentation",
              "src": "3220:1076:1",
              "text": "@notice Used by a manager to add an array of member addresses to the\n allowlist and emit an event to allow for easy searching.\n @param syndicateAddress The address of the Syndicate to accept the\n allowedAdresses\n @param memberAddresses An array of addresses to be allowed by the\n Syndicate\n @notice This function is only relevant when the manager has turned the\n allowlist on (`SyndicateValues.allowlistEnabled == true`). If the\n allowlist is off, anyone can make a deposit to the Syndicate without the\n manager specifically allowing their address.\n @dev Allowing a single address costs 31527 in gas without an array and\n 32445 in gas with an array. This is a difference in cost of $0.17 at\n current gas prices, which is a worthwhile trade off considering that (a)\n allowing only one address will be less common than allowing multiple\n addresses and (b) having two different allowAddress functions poses a\n security risk if we forget to reconcile changes between them"
            },
            "functionSelector": "15b1a646",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 160,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 153,
                    "src": "4468:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 161,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 159,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2419,
                  "src": "4456:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4456:29:1"
              },
              {
                "arguments": [
                  {
                    "id": 163,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 153,
                    "src": "4503:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 164,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 162,
                  "name": "onlyOpen",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2503,
                  "src": "4494:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4494:26:1"
              },
              {
                "arguments": [
                  {
                    "id": 166,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 153,
                    "src": "4550:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 167,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 165,
                  "name": "onlyAllowlistEnabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2580,
                  "src": "4529:20:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4529:38:1"
              }
            ],
            "name": "managerAllowAddresses",
            "nameLocation": "4310:21:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 158,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4439:8:1"
            },
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "syndicateAddress",
                  "nameLocation": "4349:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "4341:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4341:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "memberAddresses",
                  "nameLocation": "4394:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "4375:34:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 154,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4375:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 155,
                    "nodeType": "ArrayTypeName",
                    "src": "4375:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4331:84:1"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4572:0:1"
            },
            "scope": 251,
            "src": "4301:725:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4889
            ],
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "6049:229:1",
              "statements": [
                {
                  "body": {
                    "id": 247,
                    "nodeType": "Block",
                    "src": "6112:160:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 233,
                              "name": "syndicateAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "6145:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 234,
                                "name": "memberAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 206,
                                "src": "6163:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 236,
                              "indexExpression": {
                                "id": 235,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "6179:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6163:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6183:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 230,
                              "name": "store",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2389,
                              "src": "6126:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SyndicateClosedEndFundStoreV0_$4592",
                                "typeString": "contract SyndicateClosedEndFundStoreV0"
                              }
                            },
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setAllowlist",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4536,
                            "src": "6126:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,bool) external"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6126:63:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 239,
                        "nodeType": "ExpressionStatement",
                        "src": "6126:63:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 241,
                              "name": "syndicateAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "6224:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 242,
                                "name": "memberAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 206,
                                "src": "6242:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 244,
                              "indexExpression": {
                                "id": 243,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "6258:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6242:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 240,
                            "name": "AddressBlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "6209:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6209:52:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 246,
                        "nodeType": "EmitStatement",
                        "src": "6204:57:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 223,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "6079:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 224,
                        "name": "memberAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "6083:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6083:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6079:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 248,
                  "initializationExpression": {
                    "assignments": [
                      220
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6072:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 248,
                        "src": "6064:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6064:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 222,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6076:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6064:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6107:3:1",
                      "subExpression": {
                        "id": 227,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "6107:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 229,
                    "nodeType": "ExpressionStatement",
                    "src": "6107:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "6059:213:1"
                }
              ]
            },
            "documentation": {
              "id": 201,
              "nodeType": "StructuredDocumentation",
              "src": "5032:741:1",
              "text": "@notice Used by a manager to remove a previously-allowed member address\n from the allowlist\n @param syndicateAddress The address of the Syndicate that contains the\n allowlist\n @param memberAddresses The array of member addresses to remove.\n @notice This function only proceeds when the allowlist is enabled, as\n it is ineffective to maintain a blocklist of possible member addresses.\n A manager who wishes to reverse a deposit into their fund should\n instead use `managerRejectDepositForMembers()`.\n @notice Blocking a member address that has previously been allowed does\n not reject or return their prior deposits. The deposit is still kept\n in the syndicate."
            },
            "functionSelector": "bd4edf0e",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 210,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 203,
                    "src": "5945:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 211,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 209,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2419,
                  "src": "5933:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5933:29:1"
              },
              {
                "arguments": [
                  {
                    "id": 213,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 203,
                    "src": "5980:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 214,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 212,
                  "name": "onlyOpen",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2503,
                  "src": "5971:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5971:26:1"
              },
              {
                "arguments": [
                  {
                    "id": 216,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 203,
                    "src": "6027:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 217,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 215,
                  "name": "onlyAllowlistEnabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2580,
                  "src": "6006:20:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6006:38:1"
              }
            ],
            "name": "managerBlockAddresses",
            "nameLocation": "5787:21:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 208,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5916:8:1"
            },
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "syndicateAddress",
                  "nameLocation": "5826:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "5818:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5818:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "memberAddresses",
                  "nameLocation": "5871:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "5852:34:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 204,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5852:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 205,
                    "nodeType": "ArrayTypeName",
                    "src": "5852:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5808:84:1"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6049:0:1"
            },
            "scope": 251,
            "src": "5778:500:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 252,
        "src": "421:5859:1",
        "usedErrors": []
      }
    ],
    "src": "40:6241:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/mbuvi/syndicates/Syndicate/contracts/SyndicateClosedEndFundAllowlistLogicV0.sol",
    "exportedSymbols": {
      "Context": [
        7765
      ],
      "ISyndicateClosedEndFundAllowlistLogicV0": [
        4890
      ],
      "ISyndicateClosedEndFundStoreGettersV0": [
        5511
      ],
      "ISyndicateClosedEndFundStoreSettersV0": [
        5733
      ],
      "ISyndicateClosedEndFundStoreV0": [
        5742
      ],
      "Ownable": [
        7104
      ],
      "ReentrancyGuard": [
        7144
      ],
      "SyndicateClosedEndFundAllowlistLogicV0": [
        251
      ],
      "SyndicateClosedEndFundLogic": [
        2705
      ],
      "SyndicateClosedEndFundStoreV0": [
        4592
      ],
      "SyndicateOwnerLogic": [
        4864
      ]
    },
    "id": 252,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 81,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:1"
      },
      {
        "absolutePath": "/Users/mbuvi/syndicates/Syndicate/contracts/SyndicateClosedEndFundLogic.sol",
        "file": "./SyndicateClosedEndFundLogic.sol",
        "id": 82,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 252,
        "sourceUnit": 2706,
        "src": "65:43:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mbuvi/syndicates/Syndicate/contracts/interfaces/ISyndicateClosedEndFundAllowlistLogicV0.sol",
        "file": "./interfaces/ISyndicateClosedEndFundAllowlistLogicV0.sol",
        "id": 83,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 252,
        "sourceUnit": 4891,
        "src": "109:66:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 85,
              "name": "ISyndicateClosedEndFundAllowlistLogicV0",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4890,
              "src": "476:39:1"
            },
            "id": 86,
            "nodeType": "InheritanceSpecifier",
            "src": "476:39:1"
          },
          {
            "baseName": {
              "id": 87,
              "name": "SyndicateClosedEndFundLogic",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2705,
              "src": "521:27:1"
            },
            "id": 88,
            "nodeType": "InheritanceSpecifier",
            "src": "521:27:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 84,
          "nodeType": "StructuredDocumentation",
          "src": "177:243:1",
          "text": "@author Syndicate Inc.\n @notice This contract enables the manager to enable/disable, add members\n to, and remove members from the allowlist. If the allowlist is enabled,\n then only the listed addresses will be allowed to deposit."
        },
        "fullyImplemented": true,
        "id": 251,
        "linearizedBaseContracts": [
          251,
          2705,
          4864,
          7104,
          7765,
          7144,
          4890
        ],
        "name": "SyndicateClosedEndFundAllowlistLogicV0",
        "nameLocation": "430:38:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "806:2:1",
              "statements": []
            },
            "documentation": {
              "id": 89,
              "nodeType": "StructuredDocumentation",
              "src": "637:54:1",
              "text": "@notice Used to initialize the Syndicate contract."
            },
            "id": 101,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 96,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91,
                    "src": "781:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 97,
                    "name": "storeAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 93,
                    "src": "788:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 98,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 95,
                  "name": "SyndicateClosedEndFundLogic",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2705,
                  "src": "753:27:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "753:48:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "716:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "708:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "storeAddress",
                  "nameLocation": "731:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "723:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "707:37:1"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "806:0:1"
            },
            "scope": 251,
            "src": "696:112:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 102,
              "nodeType": "StructuredDocumentation",
              "src": "896:183:1",
              "text": "@notice A manager enables or disables the allowlist.\n @dev These events can be used to notify prospective members off-chain\n whether membership is restricted or not."
            },
            "id": 108,
            "name": "AllowlistEnabledUpdated",
            "nameLocation": "1090:23:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "syndicateAddress",
                  "nameLocation": "1139:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "1123:32:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1123:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "allowlistEnabled",
                  "nameLocation": "1178:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "1165:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1113:87:1"
            },
            "src": "1084:117:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 109,
              "nodeType": "StructuredDocumentation",
              "src": "1207:473:1",
              "text": "@notice A manager adds a member's wallet address to the allowlist.\n @dev These events can be used to notify a member off-chain that their\n address is now allowed\n @dev The timestamp is not critical here and in the below events, so it\n is not included to save on gas costs. When a timestamp is necessary, it\n can be pulled by evaluating the block that an event was contained in\n (since the timestamp is just the block.timestamp)"
            },
            "id": 115,
            "name": "AddressAllowed",
            "nameLocation": "1691:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "syndicateAddress",
                  "nameLocation": "1731:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1715:32:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "memberAddress",
                  "nameLocation": "1773:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1757:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1757:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1705:87:1"
            },
            "src": "1685:108:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 116,
              "nodeType": "StructuredDocumentation",
              "src": "1799:218:1",
              "text": "@notice A manager removes a member's wallet address from the allowlist.\n @dev These events can be used to notify a member off-chain that their\n address is now blocked (e.g. removed from the allowlist)"
            },
            "id": 122,
            "name": "AddressBlocked",
            "nameLocation": "2028:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "syndicateAddress",
                  "nameLocation": "2068:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "2052:32:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2052:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "memberAddress",
                  "nameLocation": "2110:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "2094:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2094:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2042:87:1"
            },
            "src": "2022:108:1"
          },
          {
            "baseFunctions": [
              4873
            ],
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "2988:226:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 140,
                        "name": "syndicateAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "3024:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 141,
                        "name": "allowlistEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "3042:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 137,
                        "name": "store",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2389,
                        "src": "2998:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SyndicateClosedEndFundStoreV0_$4592",
                          "typeString": "contract SyndicateClosedEndFundStoreV0"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setAllowlistEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4515,
                      "src": "2998:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2998:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:61:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 145,
                        "name": "syndicateAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "3172:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 146,
                        "name": "allowlistEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "3190:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 144,
                      "name": "AllowlistEnabledUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "3148:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3148:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 148,
                  "nodeType": "EmitStatement",
                  "src": "3143:64:1"
                }
              ]
            },
            "documentation": {
              "id": 123,
              "nodeType": "StructuredDocumentation",
              "src": "2218:585:1",
              "text": "@notice Used by a manager to turn the allowlist on or off\n @param syndicateAddress The address of the Syndicate\n @param allowlistEnabled True if the Syndicate ONLY accepts deposits\n from allowed addresses. False if any (accredited) member can make a\n deposit.\n @notice This setter can only be called when the Syndicate is open, as\n it only limits future deposits. To retroactively remove deposits that\n have been made by members who may not have been on the allowlist, a\n manager should use `managerRejectDepositForMember()`."
            },
            "functionSelector": "86afa44e",
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 131,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 125,
                    "src": "2943:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 130,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2419,
                  "src": "2931:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2931:29:1"
              },
              {
                "arguments": [
                  {
                    "id": 134,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 125,
                    "src": "2970:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 135,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 133,
                  "name": "onlyOpen",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2503,
                  "src": "2961:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2961:26:1"
              }
            ],
            "name": "managerSetAllowlistEnabled",
            "nameLocation": "2817:26:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 129,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2922:8:1"
            },
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "syndicateAddress",
                  "nameLocation": "2861:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "2853:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2853:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "allowlistEnabled",
                  "nameLocation": "2892:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "2887:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2887:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2843:71:1"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2988:0:1"
            },
            "scope": 251,
            "src": "2808:406:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4881
            ],
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "4572:454:1",
              "statements": [
                {
                  "body": {
                    "id": 197,
                    "nodeType": "Block",
                    "src": "4718:302:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 183,
                              "name": "syndicateAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153,
                              "src": "4751:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 184,
                                "name": "memberAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 156,
                                "src": "4769:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 186,
                              "indexExpression": {
                                "id": 185,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 170,
                                "src": "4785:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4769:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4789:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 180,
                              "name": "store",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2389,
                              "src": "4732:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SyndicateClosedEndFundStoreV0_$4592",
                                "typeString": "contract SyndicateClosedEndFundStoreV0"
                              }
                            },
                            "id": 182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setAllowlist",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4536,
                            "src": "4732:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,bool) external"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4732:62:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 189,
                        "nodeType": "ExpressionStatement",
                        "src": "4732:62:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 191,
                              "name": "syndicateAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153,
                              "src": "4972:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 192,
                                "name": "memberAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 156,
                                "src": "4990:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 194,
                              "indexExpression": {
                                "id": 193,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 170,
                                "src": "5006:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4990:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 190,
                            "name": "AddressAllowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "4957:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4957:52:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 196,
                        "nodeType": "EmitStatement",
                        "src": "4952:57:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 173,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "4685:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 174,
                        "name": "memberAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "4689:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4689:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4685:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 198,
                  "initializationExpression": {
                    "assignments": [
                      170
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 170,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4678:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "4670:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 169,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4670:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 172,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4682:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4670:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4713:3:1",
                      "subExpression": {
                        "id": 177,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "4713:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 179,
                    "nodeType": "ExpressionStatement",
                    "src": "4713:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "4665:355:1"
                }
              ]
            },
            "documentation": {
              "id": 151,
              "nodeType": "StructuredDocumentation",
              "src": "3220:1076:1",
              "text": "@notice Used by a manager to add an array of member addresses to the\n allowlist and emit an event to allow for easy searching.\n @param syndicateAddress The address of the Syndicate to accept the\n allowedAdresses\n @param memberAddresses An array of addresses to be allowed by the\n Syndicate\n @notice This function is only relevant when the manager has turned the\n allowlist on (`SyndicateValues.allowlistEnabled == true`). If the\n allowlist is off, anyone can make a deposit to the Syndicate without the\n manager specifically allowing their address.\n @dev Allowing a single address costs 31527 in gas without an array and\n 32445 in gas with an array. This is a difference in cost of $0.17 at\n current gas prices, which is a worthwhile trade off considering that (a)\n allowing only one address will be less common than allowing multiple\n addresses and (b) having two different allowAddress functions poses a\n security risk if we forget to reconcile changes between them"
            },
            "functionSelector": "15b1a646",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 160,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 153,
                    "src": "4468:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 161,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 159,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2419,
                  "src": "4456:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4456:29:1"
              },
              {
                "arguments": [
                  {
                    "id": 163,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 153,
                    "src": "4503:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 164,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 162,
                  "name": "onlyOpen",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2503,
                  "src": "4494:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4494:26:1"
              },
              {
                "arguments": [
                  {
                    "id": 166,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 153,
                    "src": "4550:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 167,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 165,
                  "name": "onlyAllowlistEnabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2580,
                  "src": "4529:20:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4529:38:1"
              }
            ],
            "name": "managerAllowAddresses",
            "nameLocation": "4310:21:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 158,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4439:8:1"
            },
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "syndicateAddress",
                  "nameLocation": "4349:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "4341:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4341:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "memberAddresses",
                  "nameLocation": "4394:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "4375:34:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 154,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4375:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 155,
                    "nodeType": "ArrayTypeName",
                    "src": "4375:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4331:84:1"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4572:0:1"
            },
            "scope": 251,
            "src": "4301:725:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4889
            ],
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "6049:229:1",
              "statements": [
                {
                  "body": {
                    "id": 247,
                    "nodeType": "Block",
                    "src": "6112:160:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 233,
                              "name": "syndicateAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "6145:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 234,
                                "name": "memberAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 206,
                                "src": "6163:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 236,
                              "indexExpression": {
                                "id": 235,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "6179:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6163:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6183:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 230,
                              "name": "store",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2389,
                              "src": "6126:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SyndicateClosedEndFundStoreV0_$4592",
                                "typeString": "contract SyndicateClosedEndFundStoreV0"
                              }
                            },
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setAllowlist",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4536,
                            "src": "6126:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,bool) external"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6126:63:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 239,
                        "nodeType": "ExpressionStatement",
                        "src": "6126:63:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 241,
                              "name": "syndicateAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "6224:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 242,
                                "name": "memberAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 206,
                                "src": "6242:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 244,
                              "indexExpression": {
                                "id": 243,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "6258:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6242:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 240,
                            "name": "AddressBlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "6209:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6209:52:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 246,
                        "nodeType": "EmitStatement",
                        "src": "6204:57:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 223,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "6079:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 224,
                        "name": "memberAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "6083:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6083:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6079:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 248,
                  "initializationExpression": {
                    "assignments": [
                      220
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6072:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 248,
                        "src": "6064:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6064:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 222,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6076:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6064:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6107:3:1",
                      "subExpression": {
                        "id": 227,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "6107:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 229,
                    "nodeType": "ExpressionStatement",
                    "src": "6107:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "6059:213:1"
                }
              ]
            },
            "documentation": {
              "id": 201,
              "nodeType": "StructuredDocumentation",
              "src": "5032:741:1",
              "text": "@notice Used by a manager to remove a previously-allowed member address\n from the allowlist\n @param syndicateAddress The address of the Syndicate that contains the\n allowlist\n @param memberAddresses The array of member addresses to remove.\n @notice This function only proceeds when the allowlist is enabled, as\n it is ineffective to maintain a blocklist of possible member addresses.\n A manager who wishes to reverse a deposit into their fund should\n instead use `managerRejectDepositForMembers()`.\n @notice Blocking a member address that has previously been allowed does\n not reject or return their prior deposits. The deposit is still kept\n in the syndicate."
            },
            "functionSelector": "bd4edf0e",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 210,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 203,
                    "src": "5945:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 211,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 209,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2419,
                  "src": "5933:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5933:29:1"
              },
              {
                "arguments": [
                  {
                    "id": 213,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 203,
                    "src": "5980:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 214,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 212,
                  "name": "onlyOpen",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2503,
                  "src": "5971:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5971:26:1"
              },
              {
                "arguments": [
                  {
                    "id": 216,
                    "name": "syndicateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 203,
                    "src": "6027:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 217,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 215,
                  "name": "onlyAllowlistEnabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2580,
                  "src": "6006:20:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6006:38:1"
              }
            ],
            "name": "managerBlockAddresses",
            "nameLocation": "5787:21:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 208,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5916:8:1"
            },
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "syndicateAddress",
                  "nameLocation": "5826:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "5818:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5818:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "memberAddresses",
                  "nameLocation": "5871:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "5852:34:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 204,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5852:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 205,
                    "nodeType": "ArrayTypeName",
                    "src": "5852:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5808:84:1"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6049:0:1"
            },
            "scope": 251,
            "src": "5778:500:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 252,
        "src": "421:5859:1",
        "usedErrors": []
      }
    ],
    "src": "40:6241:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-22T17:37:06.614Z",
  "devdoc": {
    "author": "Syndicate Inc.",
    "events": {
      "AddressAllowed(address,address)": {
        "details": "These events can be used to notify a member off-chain that their address is now allowedThe timestamp is not critical here and in the below events, so it is not included to save on gas costs. When a timestamp is necessary, it can be pulled by evaluating the block that an event was contained in (since the timestamp is just the block.timestamp)"
      },
      "AddressBlocked(address,address)": {
        "details": "These events can be used to notify a member off-chain that their address is now blocked (e.g. removed from the allowlist)"
      },
      "AllowlistEnabledUpdated(address,bool)": {
        "details": "These events can be used to notify prospective members off-chain whether membership is restricted or not."
      }
    },
    "kind": "dev",
    "methods": {
      "getSyndicateFeeAddress()": {
        "details": "This function is needed to allow inheriting contracts to only be able to view but not change syndicateFeeAddress without going through ownerSetSyndicateFeeAddress"
      },
      "managerAllowAddresses(address,address[])": {
        "details": "Allowing a single address costs 31527 in gas without an array and 32445 in gas with an array. This is a difference in cost of $0.17 at current gas prices, which is a worthwhile trade off considering that (a) allowing only one address will be less common than allowing multiple addresses and (b) having two different allowAddress functions poses a security risk if we forget to reconcile changes between them",
        "params": {
          "memberAddresses": "An array of addresses to be allowed by the Syndicate",
          "syndicateAddress": "The address of the Syndicate to accept the allowedAdresses"
        }
      },
      "managerBlockAddresses(address,address[])": {
        "params": {
          "memberAddresses": "The array of member addresses to remove.",
          "syndicateAddress": "The address of the Syndicate that contains the allowlist"
        }
      },
      "managerSetAllowlistEnabled(address,bool)": {
        "params": {
          "allowlistEnabled": "True if the Syndicate ONLY accepts deposits from allowed addresses. False if any (accredited) member can make a deposit.",
          "syndicateAddress": "The address of the Syndicate"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerSetSyndicateFeeAddress(address)": {
        "params": {
          "feeAddress": "The owner's new contract fee address"
        }
      },
      "ownerTransferOwnership(address)": {
        "params": {
          "newOwner": "The new owner's address."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "AddressAllowed(address,address)": {
        "notice": "A manager adds a member's wallet address to the allowlist."
      },
      "AddressBlocked(address,address)": {
        "notice": "A manager removes a member's wallet address from the allowlist."
      },
      "AllowlistEnabledUpdated(address,bool)": {
        "notice": "A manager enables or disables the allowlist."
      },
      "SyndicateFeeAddressUpdated(address)": {
        "notice": "The owner updates the contract fee address."
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Used to initialize the Syndicate contract."
      },
      "getSyndicateFeeAddress()": {
        "notice": "getter function for syndicate fee address."
      },
      "managerAllowAddresses(address,address[])": {
        "notice": "Used by a manager to add an array of member addresses to the allowlist and emit an event to allow for easy searching.This function is only relevant when the manager has turned the allowlist on (`SyndicateValues.allowlistEnabled == true`). If the allowlist is off, anyone can make a deposit to the Syndicate without the manager specifically allowing their address."
      },
      "managerBlockAddresses(address,address[])": {
        "notice": "Used by a manager to remove a previously-allowed member address from the allowlistThis function only proceeds when the allowlist is enabled, as it is ineffective to maintain a blocklist of possible member addresses. A manager who wishes to reverse a deposit into their fund should instead use `managerRejectDepositForMembers()`.Blocking a member address that has previously been allowed does not reject or return their prior deposits. The deposit is still kept in the syndicate."
      },
      "managerSetAllowlistEnabled(address,bool)": {
        "notice": "Used by a manager to turn the allowlist on or offThis setter can only be called when the Syndicate is open, as it only limits future deposits. To retroactively remove deposits that have been made by members who may not have been on the allowlist, a manager should use `managerRejectDepositForMember()`."
      },
      "ownerRenounceOwnership()": {
        "notice": "Renounce ownership of the contract"
      },
      "ownerSetSyndicateFeeAddress(address)": {
        "notice": "set a new fee address for the contract function that can only be triggered by the contract owner."
      },
      "ownerTransferOwnership(address)": {
        "notice": "Transfers ownership to the provided address."
      }
    },
    "notice": "This contract enables the manager to enable/disable, add members to, and remove members from the allowlist. If the allowlist is enabled, then only the listed addresses will be allowed to deposit.",
    "version": 1
  }
}
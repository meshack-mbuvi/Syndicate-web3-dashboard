import { useDemoMode } from '@/hooks/useDemoMode';
import React from 'react';

/**
 * This icon wrapper contains an inverted exclamation mark sourced from the
 * figma designs on the syndicate form.
 * The wrapper renders an image with src attribute set to the custom svg icon
 * @param {object} props an object containing custom properties for styling
 */
export const InfoIcon = (props: {
  tooltip?: string | React.ReactNode;
  side?: string;
  iconSize?: string;
  src?: string;
}): JSX.Element => {
  const { tooltip, side, iconSize, src = '/images/info.svg' } = props;
  return (
    <div className="flex-shrink-0 flex items-center justify-center">
      <div className="tooltip pl-2">
        <img
          src={src}
          {...props}
          className={`image-tooltip ${iconSize ? iconSize : ``}`}
          alt=""
        />
        {tooltip ? (
          typeof tooltip === 'string' ? (
            <p
              className={`${
                side === 'left' ? 'left' : ''
              } text-sm font-light tooltiptext w-fit-content bg-gray-9 p-4 mt-1`}
            >
              {tooltip}
            </p>
          ) : (
            <div className="tooltiptext">{tooltip}</div>
          )
        ) : null}
      </div>
    </div>
  );
};

export enum ExternalLinkColor {
  GRAY = 'GRAY',
  GRAY4 = 'GRAY4',
  BLUE = 'BLUE',
  WHITE = 'WHITE'
}

/**Shows an icon for external links */
export const ExternalLinkIcon = (props) => {
  let icon;
  switch (props.iconcolor) {
    case ExternalLinkColor.GRAY:
      icon = '/images/externalLinkGray.svg';
      break;

    case ExternalLinkColor.GRAY4:
      icon = '/images/externalLinkGray4.svg';
      break;

    case ExternalLinkColor.BLUE:
      icon = '/images/externalLink.svg';
      break;

    case ExternalLinkColor.WHITE:
      icon = '/images/externalLinkWhite.svg';
      break;

    default:
      icon = '/images/externalLink.svg';
      break;
  }
  return <img src={icon} {...props} alt="external-link" />;
};

export const CopyLinkIcon = (props: {
  color?: string;
  width?: string;
  height?: string;
}): JSX.Element => {
  const { color = '#000', width = '16', height = '16' } = props;
  return (
    <svg
      width={width}
      height={height}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={color}
    >
      <path
        d="M7.90569 11.1011L8.90911 10.0848C7.91324 10.0095 7.26441 9.70841 6.77402 9.21908C5.45373 7.90167 5.46128 6.0347 6.76647 4.73234L9.22598 2.27819C10.5463 0.968301 12.4022 0.960773 13.7225 2.27819C15.0428 3.5956 15.0277 5.45504 13.7225 6.7574L12.2438 8.2329C12.455 8.7147 12.5003 9.27178 12.4248 9.7611L14.6429 7.55537C16.4461 5.74863 16.4612 3.19661 14.6354 1.36729C12.8021 -0.462035 10.2369 -0.446978 8.42626 1.35976L5.85359 3.93437C4.04291 5.74111 4.02782 8.30065 5.86113 10.1224C6.33644 10.5967 6.94 10.9355 7.90569 11.1011ZM8.09431 4.89796L7.09089 5.91425C8.08676 5.99706 8.73559 6.29066 9.22598 6.77998C10.5463 8.0974 10.5387 9.96436 9.23353 11.2667L6.76647 13.7209C5.45373 15.0308 3.59778 15.0383 2.2775 13.7284C0.95721 12.4035 0.964754 10.5516 2.2775 9.24166L3.75622 7.76616C3.54497 7.29189 3.49216 6.72728 3.57515 6.23796L1.35707 8.44369C-0.446067 10.2504 -0.461156 12.81 1.36461 14.6318C3.19793 16.4611 5.76306 16.446 7.56619 14.6468L10.1464 12.0647C11.9571 10.258 11.9722 7.69841 10.1389 5.87661C9.66356 5.40234 9.06 5.06358 8.09431 4.89796Z"
        className="fill-current"
      />
    </svg>
  );
};

export const CopyToClipboardIcon = (props: {
  color?: string;
  width?: string;
  height?: string;
}): JSX.Element => {
  const { color = '#000', width = '16', height = '16' } = props;
  return (
    <svg
      width={width}
      height={height}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={color}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M15.4095 7.4302C15.4697 7.58819 15.5005 7.75766 15.5 7.92873V14.6975C15.4997 15.0428 15.3735 15.374 15.1493 15.6181C14.925 15.8623 14.6209 15.9996 14.3037 16H8.69605C8.37897 15.9995 8.07499 15.8623 7.85078 15.6181C7.62656 15.3741 7.50041 15.0432 7.5 14.698V13.3777C7.5 13.2157 7.55915 13.0602 7.66443 12.9456C7.76972 12.831 7.91252 12.7666 8.06142 12.7666C8.21032 12.7666 8.35312 12.831 8.4584 12.9456C8.56369 13.0602 8.62284 13.2157 8.62284 13.3777V14.698L14.3044 14.7781L14.3718 8.48689H12.0887C11.9398 8.48689 11.797 8.4225 11.6917 8.30787C11.5865 8.19325 11.5273 8.03779 11.5273 7.87568V5.22242H11.1928C11.0439 5.22242 10.9011 5.15803 10.7958 5.0434C10.6905 4.92877 10.6314 4.77332 10.6314 4.61121C10.6314 4.44911 10.6905 4.29365 10.7958 4.17902C10.9011 4.0644 11.0439 4.00001 11.1928 4.00001H11.8572C12.0244 3.99945 12.19 4.03491 12.3445 4.10436C12.499 4.17381 12.6393 4.27585 12.7575 4.40463L15.1491 7.00837C15.2607 7.12881 15.3492 7.27219 15.4095 7.4302Z"
        className="fill-current"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M0.5 1.20651V10.7934C0.5 11.1134 0.626091 11.4203 0.850536 11.6466C1.07498 11.8729 1.37939 12 1.6968 12H8.30316C8.62058 12 8.92498 11.8729 9.14943 11.6466C9.37388 11.4203 9.5 11.1134 9.5 10.7934V3.90354C9.5 3.74508 9.46902 3.58816 9.40884 3.44176C9.34867 3.29536 9.26047 3.16234 9.14931 3.0503L6.47373 0.353266C6.24927 0.127045 5.94487 -2.7651e-05 5.62747 4.51291e-09H1.6968C1.37939 4.51291e-09 1.07498 0.127114 0.850536 0.353379C0.626091 0.579644 0.5 0.886525 0.5 1.20651ZM5.02919 3.90367V1.20651H1.6968V10.7934H8.30316V4.50693H5.62759C5.46889 4.50693 5.31668 4.44337 5.20445 4.33023C5.09223 4.21711 5.02919 4.06366 5.02919 3.90367Z"
        className="fill-current"
      />
    </svg>
  );
};

export const CopiedLinkIcon = ({
  color = 'text-green',
  width = '16',
  height = '16'
}): JSX.Element => {
  return (
    <svg
      width={width}
      height={height}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={color}
    >
      <path
        d="M5.3125 13.8125C5.72656 13.8125 6.04688 13.6406 6.27344 13.3047L13.6172 1.86719C13.7812 1.60938 13.8516 1.39062 13.8516 1.17969C13.8516 0.625 13.4609 0.242188 12.8984 0.242188C12.5156 0.242188 12.2812 0.382812 12.0469 0.75L5.27344 11.4922L1.79688 7.03125C1.5625 6.72656 1.32031 6.60156 0.976562 6.60156C0.414062 6.60156 0.0078125 7 0.0078125 7.54688C0.0078125 7.78906 0.09375 8.02344 0.296875 8.26562L4.34375 13.3125C4.61719 13.6562 4.90625 13.8125 5.3125 13.8125Z"
        className={`fill-current ${color}`}
      />
    </svg>
  );
};

export const LockIcon = ({
  color = 'text-green',
  width = '16',
  height = '16'
}): JSX.Element => {
  return (
    <svg
      width={width}
      height={height}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={color}
    >
      <path
        d="M2.08084 16H9.91916C10.9813 16 11.5 15.4751 11.5 14.327V8.30753C11.5 7.27422 11.0719 6.74116 10.1909 6.65095V4.58432C10.1909 1.49257 8.15719 0 6 0C3.84281 0 1.80913 1.49257 1.80913 4.58432V6.69195C1.00225 6.81497 0.5 7.33983 0.5 8.30753V14.327C0.5 15.4751 1.01871 16 2.08084 16ZM3.13473 4.4121C3.13473 2.35366 4.46033 1.26294 6 1.26294C7.53967 1.26294 8.86527 2.35366 8.86527 4.4121V6.64275L3.13473 6.65095V4.4121Z"
        className={`fill-current ${color}`}
      />
    </svg>
  );
};

export const OpenExternalLinkIcon = (props: {
  className?: string;
  width?: string;
  height?: string;
}): JSX.Element => {
  const { className = 'text-black', width = '16', height = '16' } = props;
  return (
    <svg
      width={width}
      height={height}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      <path
        d="M7.2007 2.39868C7.64257 2.39868 8.00078 2.75689 8.00078 3.19876C8.00078 3.60907 7.69192 3.94724 7.29401 3.99346L7.2007 3.99884H2.40023C1.98993 3.99884 1.65176 4.3077 1.60554 4.70561L1.60016 4.79892V13.5998C1.60016 14.0101 1.90902 14.3483 2.30693 14.3945L2.40023 14.3999H11.2011C11.6114 14.3999 11.9496 14.091 11.9958 13.6931L12.0012 13.5998V8.79931C12.0012 8.35744 12.3594 7.99923 12.8012 7.99923C13.2116 7.99923 13.5497 8.30809 13.5959 8.706L13.6013 8.79931V13.5998C13.6013 14.878 12.6021 15.9229 11.3421 15.9959L11.2011 16H2.40023C1.12196 16 0.0770788 15.0008 0.00407455 13.7408L0 13.5998V4.79892C0 3.52065 0.999234 2.47576 2.2592 2.40276L2.40023 2.39868H7.2007Z"
        className="fill-current"
      />
      <path
        d="M15.203 0C15.6133 0 15.9515 0.308862 15.9977 0.706772L16.0031 0.800078V5.60055C16.0031 6.04242 15.6449 6.40062 15.203 6.40062C14.7927 6.40062 14.4545 6.09176 14.4083 5.69385L14.4029 5.60055V1.60016H10.4026C9.99225 1.60016 9.65408 1.29129 9.60786 0.893384L9.60248 0.800078C9.60248 0.389769 9.91134 0.0515993 10.3093 0.00538271L10.4026 0H15.203Z"
        className="fill-current"
      />
      <path
        d="M14.6373 0.234337C14.9498 -0.0781125 15.4563 -0.0781125 15.7688 0.234337C16.0572 0.522753 16.0794 0.976582 15.8353 1.29045L15.7688 1.36582L6.96793 10.1667C6.65548 10.4791 6.1489 10.4791 5.83645 10.1667C5.54803 9.87826 5.52585 9.42443 5.76989 9.11057L5.83645 9.0352L14.6373 0.234337Z"
        className="fill-current"
      />
    </svg>
  );
};

export const RightArrow = (props: {
  className?: string;
  width?: string;
  height?: string;
}): JSX.Element => {
  const { className, width = '16', height = '14' } = props;
  return (
    <svg
      width={width}
      height={height}
      viewBox="0 0 16 14"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      <path
        d="M16 7C16 6.78562 15.9052 6.58839 15.7329 6.42546L10.0118 0.740105C9.83953 0.577176 9.65859 0.499999 9.4518 0.499999C9.02962 0.499999 8.69359 0.808706 8.69359 1.23747C8.69359 1.44327 8.77114 1.64908 8.90899 1.7777L10.839 3.73285L13.7426 6.36544L11.6575 6.23681L0.758213 6.23681C0.310179 6.23681 9.53674e-07 6.55409 9.53674e-07 7C9.53674e-07 7.44591 0.310179 7.76319 0.758213 7.76319L11.6575 7.76319L13.734 7.63456L10.839 10.2672L8.90899 12.2223C8.77114 12.3595 8.69359 12.5567 8.69359 12.7625C8.69359 13.1913 9.02962 13.5 9.4518 13.5C9.65859 13.5 9.83953 13.4314 10.0291 13.2427L15.7329 7.57454C15.9052 7.41161 16 7.21438 16 7Z"
        className="fill-current"
      />
    </svg>
  );
};

export const WalletIcon = (props: {
  className?: string;
  width?: string;
  height?: string;
}): JSX.Element => {
  const { className = 'text-green', width = '13', height = '10' } = props;

  const isDemoMode = useDemoMode();

  if (isDemoMode) {
    return (
      <img
        className="mr-2"
        width={18}
        height={12}
        src="/images/status/gamecontroller.svg"
        alt="demo icon"
      />
    );
  }

  return (
    <svg
      width={width}
      height={height}
      viewBox="0 0 13 10"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      <path
        d="M11.875 0H0.625C0.25 0 0 0.25 0 0.625V9.375C0 9.75 0.25 10 0.625 10H11.875C12.25 10 12.5 9.75 12.5 9.375V7.25H7.375C6.13236 7.25 5.125 6.24264 5.125 5C5.125 3.75736 6.13236 2.75 7.375 2.75H12.5V0.625C12.5 0.25 12.25 0 11.875 0Z"
        className="fill-current"
      />
      <circle cx="7.5" cy="5" r="1.25" className="fill-current animate-none" />
    </svg>
  );
};

export const RibbonIcon = (props: {
  className?: string;
  width?: string;
  height?: string;
}): JSX.Element => {
  const { className, width = '16', height = '16' } = props;
  return (
    <svg
      width={width}
      height={height}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      <path
        d="M11.852 15.2887V10.0986C13.0146 9.04225 13.75 7.50704 13.75 5.80282C13.757 2.59155 11.1726 0 7.99999 0C4.82734 0 2.25 2.59155 2.25 5.80282C2.25 7.54225 3.0134 9.11268 4.22503 10.169V15.2887C4.22503 15.7817 4.51218 16 4.86936 16C5.14251 16 5.34561 15.8592 5.55572 15.6479L7.76887 13.4366C7.87393 13.331 7.95797 13.2958 8.04201 13.2958C8.11905 13.2958 8.2031 13.331 8.30815 13.4366L10.5213 15.6479C10.7384 15.8662 10.9485 16 11.2147 16C11.5719 16 11.852 15.7817 11.852 15.2887ZM8.007 10.2042C5.56973 10.1972 3.66474 8.23944 3.66474 5.80282C3.66474 3.35915 5.56973 1.40141 8.007 1.40141C10.4373 1.40141 12.3423 3.35915 12.3493 5.80282C12.3563 8.23944 10.4373 10.2042 8.007 10.2042Z"
        className="fill-current"
      />
    </svg>
  );
};

export const OpenSeaIcon = (): JSX.Element => (
  <svg
    width="18"
    height="18"
    viewBox="0 0 18 18"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M9 18C13.9703 18 18 13.9703 18 9C18 4.02971 13.9713 0 9 0C4.02971 0 0 4.02971 0 9C0 13.9703 4.02971 18 9 18ZM14.8753 9.98265V10.5624C14.8753 10.5957 14.8549 10.6253 14.8254 10.6382C14.6441 10.7159 14.0237 11.0007 13.7657 11.3595C13.6222 11.5592 13.486 11.7777 13.3492 11.9972C12.8585 12.7848 12.3592 13.5861 11.4799 13.5861H6.78908C5.12654 13.5861 3.7793 12.2342 3.7793 10.5661V10.5125C3.7793 10.4681 3.81535 10.432 3.85974 10.432H6.47471C6.52647 10.432 6.56438 10.4801 6.55978 10.531C6.54127 10.7011 6.57272 10.8749 6.65316 11.0331C6.8085 11.3484 7.13029 11.5453 7.47795 11.5453H8.7725V10.5347H7.49275C7.4271 10.5347 7.38828 10.4588 7.42619 10.4052C7.43387 10.3934 7.44213 10.3813 7.45081 10.3687L7.4509 10.3685C7.45783 10.3584 7.46503 10.3479 7.47241 10.3368C7.59355 10.1648 7.76646 9.89758 7.93845 9.59336C8.05588 9.38809 8.16961 9.16894 8.26115 8.94887C8.27814 8.91238 8.29198 8.8751 8.30558 8.83849L8.30923 8.82865C8.31576 8.81028 8.32235 8.79223 8.32885 8.77442C8.34723 8.72406 8.36493 8.67558 8.37859 8.62709C8.39368 8.58181 8.4063 8.5347 8.41847 8.48926L8.42666 8.45879C8.47013 8.272 8.48862 8.07413 8.48862 7.86886C8.48862 7.78841 8.48493 7.70426 8.47753 7.62382C8.47382 7.53598 8.46274 7.44812 8.45163 7.36028C8.44423 7.28261 8.43037 7.20586 8.41558 7.12542C8.39709 7.00799 8.37119 6.89149 8.34159 6.77404L8.33142 6.72967C8.32482 6.70572 8.31854 6.6821 8.3123 6.65862C8.29757 6.6032 8.28304 6.54853 8.26486 6.49204C8.1918 6.23959 8.10767 5.99363 8.01889 5.7634C7.98653 5.67185 7.94954 5.58401 7.91255 5.49617C7.86968 5.39224 7.82623 5.29575 7.7849 5.20398L7.75166 5.12999C7.72578 5.07821 7.70358 5.03105 7.68139 4.98297C7.65642 4.92841 7.63054 4.87385 7.60464 4.82209C7.59738 4.80646 7.58968 4.79127 7.58212 4.77634L7.58212 4.77633C7.57043 4.75325 7.55906 4.7308 7.55008 4.70834L7.39197 4.41615C7.36977 4.37639 7.40676 4.32923 7.45022 4.34125L8.43962 4.6094H8.4424C8.44347 4.6094 8.44424 4.60972 8.44487 4.60999C8.44532 4.61017 8.44571 4.61033 8.44608 4.61033L8.57646 4.64639L8.71979 4.68709L8.7725 4.70186V4.11379C8.7725 3.82991 8.99996 3.59967 9.28107 3.59967C9.42161 3.59967 9.54922 3.657 9.64076 3.75038C9.73229 3.84379 9.78962 3.97139 9.78962 4.11379V4.98668L9.89505 5.01625C9.90336 5.01904 9.91168 5.02273 9.91908 5.02828L9.95418 5.05489L9.95421 5.05492C9.97523 5.07093 10.0003 5.09 10.0291 5.11151C10.0441 5.12348 10.0595 5.13652 10.0758 5.15025L10.0758 5.15029C10.0997 5.17046 10.1253 5.19214 10.1539 5.21414C10.2492 5.29088 10.3629 5.38982 10.4878 5.50357C10.521 5.53222 10.5534 5.56181 10.583 5.59141C10.7439 5.7412 10.9242 5.91688 11.0962 6.11107C11.1443 6.16562 11.1914 6.2211 11.2395 6.27935C11.2565 6.3003 11.2739 6.32113 11.2912 6.34189L11.2912 6.34191C11.3228 6.37978 11.3542 6.41741 11.3828 6.45505L11.4154 6.49829C11.464 6.5625 11.514 6.62867 11.5585 6.69731C11.5698 6.71461 11.5817 6.73208 11.5937 6.74958L11.5937 6.74959L11.5938 6.74965C11.6093 6.77235 11.6249 6.79508 11.639 6.81751C11.7092 6.92384 11.7712 7.03389 11.8304 7.14392C11.8553 7.19477 11.8812 7.25025 11.9034 7.30481C11.9691 7.45183 12.0208 7.60163 12.0541 7.75142C12.0643 7.78379 12.0717 7.81892 12.0754 7.85037V7.85777C12.0865 7.90214 12.0902 7.9493 12.0939 7.99738C12.1087 8.15088 12.1013 8.30437 12.068 8.45879C12.0541 8.52445 12.0356 8.58639 12.0135 8.65205L12.006 8.67317C11.9862 8.72951 11.9659 8.78748 11.9404 8.84253C11.8849 8.97105 11.8193 9.09959 11.7416 9.21979C11.7166 9.26418 11.687 9.31134 11.6574 9.35573C11.6417 9.37872 11.6257 9.40106 11.61 9.42295L11.6099 9.423C11.5935 9.44598 11.5774 9.46848 11.5622 9.49073C11.5215 9.5462 11.4781 9.60445 11.4337 9.65624C11.3939 9.7108 11.3532 9.76535 11.3089 9.81343C11.2469 9.88648 11.1877 9.95583 11.1258 10.0224C11.0888 10.0659 11.049 10.1103 11.0083 10.15C10.9743 10.1881 10.9395 10.2227 10.9069 10.2551L10.8909 10.2711C10.829 10.3331 10.7772 10.3812 10.7337 10.4209L10.632 10.5143C10.6172 10.5273 10.5978 10.5347 10.5774 10.5347H9.78962V11.5453H10.7809C11.0028 11.5453 11.2136 11.4667 11.3838 11.3225L11.3883 11.3185L11.3883 11.3185C11.4544 11.2609 11.7036 11.0435 11.9968 10.7196C12.007 10.7085 12.0199 10.7002 12.0347 10.6965L14.7727 9.90498C14.8235 9.89018 14.8753 9.92901 14.8753 9.98265ZM4.44255 9.30167L4.48137 9.24063L6.82263 5.57803C6.85685 5.52441 6.93729 5.52995 6.96318 5.5882C7.35432 6.46478 7.69182 7.55497 7.53371 8.23368C7.46621 8.51293 7.28127 8.89111 7.07321 9.24063C7.04641 9.2915 7.01682 9.34143 6.98537 9.38951C6.97058 9.4117 6.94561 9.42465 6.91879 9.42465H4.51097C4.44624 9.42465 4.40833 9.35437 4.44255 9.30167Z"
      fill="#90949E"
    />
  </svg>
);

export const SettingsIcon = (): JSX.Element => (
  <svg
    width="17"
    height="16"
    viewBox="0 0 17 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M8.24291 16H9.75319C10.3289 16 10.77 15.6483 10.9046 15.0945L11.2261 13.695L11.4653 13.6127L12.684 14.3611C13.17 14.6679 13.7308 14.5931 14.142 14.1815L15.1887 13.1413C15.5999 12.7297 15.6747 12.1609 15.3681 11.6819L14.6055 10.4696L14.6952 10.2451L16.0934 9.91581C16.6392 9.7811 16.998 9.33209 16.998 8.76333V7.28157C16.998 6.71282 16.6466 6.2638 16.0934 6.12909L14.7102 5.79233L14.613 5.55285L15.3756 4.34051C15.6822 3.86155 15.6074 3.30028 15.1962 2.8812L14.1494 1.83349C13.7457 1.42937 13.185 1.35454 12.699 1.65388L11.4803 2.40225L11.2261 2.30496L10.9046 0.905519C10.77 0.351731 10.3289 0 9.75319 0H8.24291C7.66721 0 7.22608 0.351731 7.09151 0.905519L6.76253 2.30496L6.50833 2.40225L5.29711 1.65388C4.81113 1.35454 4.24291 1.42937 3.83917 1.83349L2.79992 2.8812C2.3887 3.30028 2.30646 3.86155 2.62048 4.34051L3.37562 5.55285L3.2859 5.79233L1.90272 6.12909C1.34945 6.2638 0.998047 6.71282 0.998047 7.28157V8.76333C0.998047 9.33209 1.35693 9.7811 1.90272 9.91581L3.30085 10.2451L3.38309 10.4696L2.62795 11.6819C2.31393 12.1609 2.39618 12.7297 2.80739 13.1413L3.84665 14.1815C4.25786 14.5931 4.82608 14.6679 5.31207 14.3611L6.52328 13.6127L6.76253 13.695L7.09151 15.0945C7.22608 15.6483 7.66721 16 8.24291 16ZM8.36253 14.8326C8.23543 14.8326 8.16814 14.7802 8.14571 14.6604L7.69711 12.8045C7.24104 12.6922 6.81487 12.5126 6.49337 12.3106L4.86347 13.3134C4.77375 13.3807 4.67655 13.3658 4.58683 13.276L3.70459 12.3929C3.62235 12.3106 3.61487 12.2208 3.67468 12.116L4.67655 10.4995C4.50459 10.1852 4.3102 9.75865 4.19057 9.30215L2.33636 8.86062C2.21674 8.83817 2.1644 8.77081 2.1644 8.64359V7.39383C2.1644 7.25912 2.20926 7.19925 2.33636 7.1768L4.18309 6.72778C4.30272 6.24135 4.52702 5.79981 4.6616 5.52292L3.66721 3.90645C3.59992 3.7942 3.60739 3.7044 3.68964 3.61459L4.57936 2.74649C4.66908 2.65669 4.75132 2.64172 4.86347 2.70907L6.47842 3.68943C6.79992 3.50982 7.25599 3.32273 7.70459 3.19551L8.14571 1.33957C8.16814 1.21983 8.23543 1.16745 8.36253 1.16745H9.63356C9.76066 1.16745 9.82795 1.21983 9.84291 1.33957L10.299 3.21048C10.7625 3.33022 11.1663 3.51731 11.5027 3.69691L13.1252 2.70907C13.2448 2.64172 13.3195 2.65669 13.4167 2.74649L14.299 3.61459C14.3887 3.7044 14.3887 3.7942 14.3214 3.90645L13.327 5.52292C13.4691 5.79981 13.6859 6.24135 13.8055 6.72778L15.6597 7.1768C15.7794 7.19925 15.8317 7.25912 15.8317 7.39383V8.64359C15.8317 8.77081 15.7719 8.83817 15.6597 8.86062L13.798 9.30215C13.6784 9.75865 13.4915 10.1852 13.3121 10.4995L14.3139 12.116C14.3737 12.2208 14.3737 12.3106 14.284 12.3929L13.4093 13.276C13.3121 13.3658 13.2223 13.3807 13.1252 13.3134L11.4952 12.3106C11.1737 12.5126 10.7551 12.6922 10.299 12.8045L9.84291 14.6604C9.82795 14.7802 9.76066 14.8326 9.63356 14.8326H8.36253ZM8.99805 10.8587C10.5607 10.8587 11.8466 9.57156 11.8466 8C11.8466 6.44341 10.5607 5.15622 8.99805 5.15622C7.43543 5.15622 6.14197 6.44341 6.14197 8C6.14197 9.56408 7.42795 10.8587 8.99805 10.8587ZM8.99805 9.69878C8.07094 9.69878 7.30833 8.93545 7.30833 8C7.30833 7.07951 8.07094 6.31618 8.99805 6.31618C9.9102 6.31618 10.6728 7.07951 10.6728 8C10.6728 8.92797 9.9102 9.69878 8.99805 9.69878Z"
      fill="#90949E"
    />
  </svg>
);
